# Copyright (c) 2023 Oracle Corporation
# Licensed under the Universal Permissive License v 1.0
# as shown at https://oss.oracle.com/licenses/upl/

# bengsig  21-nov-2023 - Add title to running plot
# bengsig  17-jul-2023  Modify plot colors
# bengsig  25-apr-2023  Creation

# running gnuplot of selected throughput

$include:"parameters.rwl"
$include:"results.rwl"
$if mtit_xc $then
 $include:"ovid2.rwl"
 $include:"mtit_declarations.rwl"
 $include:"xc_implementation.rwl"
$endif


private string mykomment;
private integer runno := $1;
subdir := "/r"||runno/1000||"/";
private file plotfile;

procedure plotweres(double xwidth)

  double minsec := 0.0;
  integer ientries, entries;

  select max(second) minsec from sysres where runnumber=:runno
  /

  if minsec is not null and minsec > xwidth+2 then
    minsec := minsec - xwidth;
  else
    minsec := 0;
  end if;

  # Query to generate plot data for throughput
  double second;
  double cnt1, cnt2, cnt3, cnt4, cnt5, cnt6, cnt7, cnt8;

  sql getres_sql
    select second
    , nvl(cnt1,0) cnt1
    , nvl(cnt2,0) cnt2
    , nvl(cnt3,0) cnt3
    , nvl(cnt4,0) cnt4
    , nvl(cnt5,0) cnt5
    , nvl(cnt6,0) cnt6
    , nvl(cnt7,0) cnt7
    , nvl(cnt8,0) cnt8
    from
    (
    select procno
    , second
    , scount
    --, wtime
    --, etime/scount avge
    from persec where vname = 'mtit_count_ins_rows'
    and second > :minsec
    and runnumber = :runno
    )
    pivot (sum(scount)
    for procno in
    ( 1 as cnt1
    , 2 as cnt2
    , 3 as cnt3
    , 4 as cnt4
    , 5 as cnt5
    , 6 as cnt6
    , 7 as cnt7
    , 8 as cnt8
    ))
    order by second
    /
    bind sql;
    define sql;
  array 65;
end;

plotfile >= resultsdir || subdir || runno||"/mtit_we.csv";
entries := 0;
  for getres_sql loop
    fprintf plotfile, "%.1f %.3f %.3f %.3f %.3f %.3f %.3f %.3f %.3f\n"
	, second
	, cnt1*0.001, cnt2*0.001
	, cnt3*0.001, cnt4*0.001
	, cnt5*0.001, cnt6*0.001
	, cnt7*0.001, cnt8*0.001;
    entries += 1;
  end loop;
  plotfile := null;

  printline "##   ";
  if minsec<1.0 then
    printline "set xrange [0:", xwidth, "]";
  else
    printline "set xrange [", minsec, ":", minsec+xwidth, "]";
  end if;
  printline "set yrange [0:*]";
  printline "#set y2range [0:*]";
  printline "set ytics nomirror";
  printline "#set y2tics";
  printline "set key bmargin horizontal";
  printline "set xlabel 'seconds since start'";
  printline "set ylabel 'thousand rows per second per process'";
  printline "#set y2label 'total throughput'";
  printf "set title '%d %s'\n", runno, mykomment;
  # Avoid really starting plots until there is at least three lines of data
  if entries>=3 then

  printline
  "plot '"||resultsdir || subdir||runno||"/mtit_we.csv' using 1:2 with lines lc rgb 'red' title '1'"
  || ", '"||resultsdir || subdir||runno||"/mtit_we.csv' using 1:3 with lines lc rgb 'cyan' title '2'"
  || ", '"||resultsdir || subdir||runno||"/mtit_we.csv' using 1:4 with lines lc rgb 'green' title '3'"
  || ", '"||resultsdir || subdir||runno||"/mtit_we.csv' using 1:5 with lines lc rgb 'magenta' title '4'"
  || ", '"||resultsdir || subdir||runno||"/mtit_we.csv' using 1:6 with lines lc rgb 'blue' title '5'"
  || ", '"||resultsdir || subdir||runno||"/mtit_we.csv' using 1:7 with lines lc rgb 'dark-orange' title '6'"
  || ", '"||resultsdir || subdir||runno||"/mtit_we.csv' using 1:8 with lines lc rgb 'orange' title '7'"
  || ", '"||resultsdir || subdir||runno||"/mtit_we.csv' using 1:9 with lines lc rgb 'dark-green' title '8'"
  ;
  end;
  fflush stdout;
end;

execute at rwloadsim
  select komment mykomment
  from rwlrun
  where runnumber = :runno
  /
  for every 2 stop runperiod loop
    plotweres(runplot_width);
    $if mtit_xc $then xc_read(0); if xc_stopnow=1 or xc_stopnow=2 then break; end; $endif 
  end;
  wait(2);
  plotweres(runperiod);
end;

