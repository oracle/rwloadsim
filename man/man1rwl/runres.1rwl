.TH runres "1rwl" "July 2022" "RWP*Load Simulator" "Program Syntax"
.SH NAME
runres \- RWP*Load Simulator runres table and runres_a view
.SH DECLARATION
When using the -s option and a results database,
the runres table saves overall execution statistics of the execution of 
all procedures doing database
work or having the statistics attribute.
The runres_a view aggregates results from a multi process run.
.P
.nf
create table runres
( runnumber number not null
, procno    number not null
, vname     varchar2(30) not null
, wtime     number(*,6)
, etime     number(*,6)
, ecount    number
, tcount    number
, constraint runres_pk primary key(runnumber, procno, vname)
)
.fi
.P
.nf
create view runres_a
( runnumber
, pcount
, vname
, wtime
, etime
, tcount
, avgw
, avge
, ecount
)
.fi
.SH COLUMNS
\fBrunnumber\fR
.RS 4
This is the number that uniquely identifies a run.
.RE
.P
\fBprocno pcount\fR
.RS 4
In single process runs, procno is zero, in multi-process runs, it gets its value from the Operating
System process number of from the -p option to rwloadsim.  
In the aggregate view, runres_a, the total process count is in the pcount column.
.RE
.P
\fBvname\fR
.RS 4
This is the name of the procedure being executed.
.RE
.P
\fBwtime\fR
.RS 4
Total time in seconds spent waiting to get a session from a session pool.
For a dedicated database, this time can be positive if a control loop uses queue every
and the $queueeverytiming:on directive is used.
.RE
.P
\fBetime\fR
.RS 4
Total time in seconds spent executing the code in the procedure, 
not including time used to get a session.
.RE
.P
\fBecount\fR
.RS 4
Total number of executions of the procedure.
.RE
.P
\fBtcount\fR
.RS 4
Number of threads having an execution of this procedure.
.RE
.P
\fBavgw, avge\fR
.RS 4
Average time spent waiting for a session respectively executing the procedure.
.RE
.SH COPYRIGHT
Copyright \(co 2023 Oracle Corporation
.P
Licensed under the Universal Permissive License v 1.0
as shown at https://oss.oracle.com/licenses/upl
.SH "SEE ALSO"
statistics(1rwl), controlloop(1rwl)
