#!/bin/bash
# Copyright (c) 2021, 2023 Oracle Corporation
# Licensed under the Universal Permissive License v 1.0
# as shown at https://oss.oracle.com/licenses/upl/

# Changes:
#
# bengsig  12-apr-2024 end2end timing
# bengsig  17-jul-2023 Modify plot colors
# bengsig  10-may-2023 Creation

. oltp-setup-env

options="-o lhHX:x:c: -l xfile:,Xfile:,latest,help,xmarker:,xline:,xcolor:"
usage="$commandname [-x|-X|--xmarker|--xline 'time text'] [--xfile|--Xfile filename] [--xcolor=rgbname] [-l|--latest|runnumber]"

getopt -Q $options -- "$@" || exit 1
options=$(getopt -n $commandname $options -- "$@")
eval set -- "$options"

help=no
markerfile=`mktemp`
trap "rm -f $markerfile" 0 int
xcolor=''
runnumber=0

while test $1 != '--'
do
  case $1 in 
    -x|--xmarker) echo m $2 >> $markerfile; shift; shift;
        ;;
    -X|--xline) echo l $2 >> $markerfile; shift; shift;
        ;;
    --xfile) cat $2 | while read x; do echo m $x; done >> $markerfile; shift; shift;
        ;;
    --Xfile) cat $2 | while read x; do echo l $x; done >> $markerfile; shift; shift;
        ;;
    -c|--xcolor) xcolor="--xcolor=$2" >> $markerfile; shift; shift;
        ;;
    -l|--latest)
        runnumber=`rwloadsim latest.rwl`
        echo latest runnumber is $runnumber
	shift
	;;
    -h|-H|--help) help=yes; shift;
        ;;
    ?)
      exit 1
      ;;
    esac;
done
shift

if test $help = yes
then
  cat <<HELP
Usage: $usage
-x|--xmarker 'time text' : Put an x-marker at time
-X|--xline   'time text' : Put a vertical line at time
--xfile|--Xfile filename : Pick markers from lines in file
--xcolor rgbname         : Use that rgb name for plotting, default 'blue'
-h|-H|--help             : Print this help
time is either YYYY.MM.DD"T"HH24:MI:SS or a number of seconds
HELP
  exit
fi

# Get directory names from parameters.rwl

# The following is a hack that is required
# for cases where the connect string for the
# system user isn't the same as the connect
# string for the normal users
export RWL_NO_SYSTEM_NEEDED=YES

lw=1 # becomes the linewidth in all plots
dynamic='' # mousing only works without it

if test $# -eq 1
then
  runnumber=$1
fi

if test $runnumber -eq 0
then
  echo Usage: $commandname runnumber or -l is required 1>&2
  exit 1
fi


eval `rwloadsim -q parameters2shell.rwl`
eval `rwloadsim -q -A 1 subdir.rwl $runnumber`

# note that subdir always both starts and ends with '/'
# and that is has no blanks.
# Hence something like $resultsdir$subdir$runnumber
# will expand to a proper pathname

if test ! -f $resultsdir$subdir$runnumber/env
then
  echo $commandname: $resultsdir$subdir$runnumber does not exist or is not a proper results directory 1>&2
  exit 2
fi

. $resultsdir$subdir$runnumber/env

if test -f $resultsdir$subdir$runnumber/markers.txt
then
  cat $resultsdir$subdir$runnumber/markers.txt |
  while read x
  do
    echo l $x
  done >> $markerfile
fi


# Generate csv files and res.plot with headers
# for all other plots
if test -s $markerfile
then
  cp $markerfile $resultsdir$subdir$runnumber/csvmarkers.input
  rwloadsim -q -i runperiod:=$runperiod -i runno:=$runnumber \
  $xcolor --markerfile=$markerfile --starttime=$starttime \
  csvmtit.rwl || exit 1
else
  rwloadsim -q -i runperiod:=$runperiod -i runno:=$runnumber \
  --starttime=$starttime csvmtit.rwl || exit 1
fi

# csvmtit may have changed runperiod, so reread
. $resultsdir$subdir$runnumber/env

xtics=60
if test 0$runperiod -gt 600
then
  xtics=120
fi
if test 0$runperiod -gt 1200
then
  xtics=300
fi

unset TERM

cat >> $resultsdir$subdir$runnumber/header.plot << END
  # This fixes the actual graph width
  set lmargin at screen 0.1
  set rmargin at screen 0.9
END

cat $resultsdir$subdir$runnumber/header.plot >> $resultsdir$subdir$runnumber/res.plot

cp $resultsdir$subdir$runnumber/header.plot $resultsdir$subdir${runnumber}/instdist.plot
# get various shell variables from csvmtit
. $resultsdir$subdir${runnumber}/csvmtitvars.sh

# Plot instance distribution
if test x$plotactive = xno
then
  cat >> $resultsdir$subdir${runnumber}/instdist.plot <<END
  set title "$runnumber instance distribution $komment"
  set yrange [0:$highinst]
  set key bmargin horizontal
  set xtics $xtics
  set xlabel "seconds after $rundate"
  set ylabel "db sessions per instance"
END
  spiaxes=x1y1
  plotact=''
else
  cat >> $resultsdir$subdir${runnumber}/instdist.plot <<END
  set title "$runnumber sessions and instance distribution $komment"
  set y2range [0:*]
  set yrange [0:$proccount*$rwl_max_pool*1.04]
  set key bmargin horizontal
  set xtics $xtics
  set xlabel "seconds after $rundate"
  set ytics nomirror
  set y2tics
  set y2label "db sessions per instance"
  set ylabel "db/active/open/range in normal pool"
END
  spiaxes=x1y2
  plotact=", \"$resultsdir$subdir${runnumber}/instdist.csv\" using 1:(\$2+\$3+\$4+\$5+\$6+\$7+\$8+\$9) with lines lw $lw lc rgb 'black' axes x1y1 title \"d\" , $proccount*$rwl_min_pool with lines lw $lw lc rgb 'grey90' axes x1y1 notitle, $proccount*$rwl_max_pool with lines lw $lw lc rgb 'grey90' axes x1y1 notitle, \"$resultsdir$subdir${runnumber}/cli.csv\" using 1:6 with lines lw $lw lc rgb 'grey70' axes x1y1 title \"o\" , \"$resultsdir$subdir${runnumber}/cli.csv\" using 1:4 with lines lw $lw lc rgb 'grey50' axes x1y1 title \"a\" "


fi
cat >> $resultsdir$subdir${runnumber}/instdist.plot <<END

set terminal png size imgwidth,480

set output "$awrdirectory$subdir$runnumber/${runnumber}_instdist.png"

plot "$resultsdir$subdir${runnumber}/instdist.csv" using 1:2 with lines lw $lw lc rgb 'magenta' axes $spiaxes title "1", \
  "$resultsdir$subdir${runnumber}/instdist.csv" using 1:3 with lines lw $lw lc rgb 'dark-red' axes $spiaxes title "2", \
  "$resultsdir$subdir${runnumber}/instdist.csv" using 1:4 with lines lw $lw lc rgb 'dark-green' axes $spiaxes title "3", \
  "$resultsdir$subdir${runnumber}/instdist.csv" using 1:5 with lines lw $lw lc rgb 'light-salmon' axes $spiaxes title "4", \
  "$resultsdir$subdir${runnumber}/instdist.csv" using 1:6 with lines lw $lw lc rgb 'dark-yellow' axes $spiaxes title "5", \
  "$resultsdir$subdir${runnumber}/instdist.csv" using 1:7 with lines lw $lw lc rgb 'light-green' axes $spiaxes title "6", \
  "$resultsdir$subdir${runnumber}/instdist.csv" using 1:8 with lines lw $lw lc rgb 'dark-orange' axes $spiaxes title "7", \
  "$resultsdir$subdir${runnumber}/instdist.csv" using 1:9 with lines lw $lw lc rgb 'skyblue' axes $spiaxes title "8"  \
  $plotact


set terminal svg $svgmouse size imgwidth,480 $dynamic
set output "$awrdirectory$subdir$runnumber/${runnumber}_instdist.svg"
replot

# now output the xrange such that all others get the same
set print "$resultsdir$subdir${runnumber}/header.plot" append
print "set xrange [" , GPVAL_X_MIN , ":" , GPVAL_X_MAX , "]"
set print "$resultsdir$subdir${runnumber}/res.plot" append
print "set xrange [" , GPVAL_X_MIN , ":" , GPVAL_X_MAX , "]"

END
gnuplot -persist $resultsdir$subdir${runnumber}/instdist.plot

cp $resultsdir$subdir$runnumber/header.plot $resultsdir$subdir${runnumber}/time.plot
cp $resultsdir$subdir$runnumber/header.plot $resultsdir$subdir${runnumber}/tp.plot
cp $resultsdir$subdir$runnumber/header.plot $resultsdir$subdir${runnumber}/ash.plot
cp $resultsdir$subdir$runnumber/header.plot $resultsdir$subdir${runnumber}/e2e.plot
  
# make the primary plot called res.svg/res.png
cat >> $resultsdir$subdir$runnumber/res.plot <<END
set key bmargin horizontal
set title "$runnumber $komment dbcpu and time"
set y2tics
set ytics nomirror
set xtics $xtics
set xlabel "seconds after $rundate"
set terminal png size imgwidth,480 
set output "$awrdirectory$subdir$runnumber/${runnumber}.png"
END

# For the full/lemans types, the primary plot has
# througput and dbtime
cat >> $resultsdir$subdir$runnumber/res.plot <<END
set ylabel "seconds/s" 

plot "$resultsdir$subdir${runnumber}/dbtime.csv" using 1:3 with lines lw $lw lc rgb 'blue' axes x1y1 title "dbtime", \
  "$resultsdir$subdir${runnumber}/dbtime.csv" using 1:2 with lines lw $lw lc rgb 'dark-green' axes x1y1 title "dbcpu", \
  "$resultsdir$subdir${runnumber}/cli.csv" using 1:(\$2+\$3) with lines lw $lw lc rgb 'cyan' axes x1y1 title "clicpu"
END

cat >> $resultsdir$subdir$runnumber/res.plot <<END
set terminal svg $svgmouse size imgwidth,480 $dynamic
set output "$awrdirectory$subdir$runnumber/${runnumber}.svg"
replot
END
gnuplot $resultsdir$subdir$runnumber/res.plot


# generate csv file for histograms and fractiles
rwloadsim -q -A 1 histdata.rwl $runnumber

cat >> $resultsdir$subdir${runnumber}/tp.plot <<END
set title "$runnumber throughput $komment"
set yrange [0:*]
set ytics nomirror
# set y2range [0:*]
# set y2tics
set key bmargin horizontal
set xtics $xtics
set xlabel "seconds after $rundate"
set ylabel "thousand rows per second per process"

set terminal png size imgwidth,480
set output "$awrdirectory$subdir$runnumber/${runnumber}_tp.png"

plot "$resultsdir$subdir${runnumber}/mtit.csv" using 1:2 with lines lw $lw lc rgb "red" title "1", \
  "$resultsdir$subdir${runnumber}/mtit.csv" using 1:3 with lines lw $lw lc rgb "cyan" title "2", \
  "$resultsdir$subdir${runnumber}/mtit.csv" using 1:4 with lines lw $lw lc rgb "green" title "3", \
  "$resultsdir$subdir${runnumber}/mtit.csv" using 1:5 with lines lw $lw lc rgb "magenta" title "4", \
  "$resultsdir$subdir${runnumber}/mtit.csv" using 1:6 with lines lw $lw lc rgb "blue" title "5", \
  "$resultsdir$subdir${runnumber}/mtit.csv" using 1:7 with lines lw $lw lc rgb "dark-orange" title "6", \
  "$resultsdir$subdir${runnumber}/mtit.csv" using 1:8 with lines lw $lw lc rgb "orange" title "7", \
  "$resultsdir$subdir${runnumber}/mtit.csv" using 1:9 with lines lw $lw lc rgb "dark-green" title "8"
  

set terminal svg $svgmouse size imgwidth,480 $dynamic
set output "$awrdirectory$subdir$runnumber/${runnumber}_tp.svg"
replot
END
gnuplot -persist $resultsdir$subdir${runnumber}/tp.plot

cat >> $resultsdir$subdir${runnumber}/e2e.plot <<END
set title "$runnumber end2end timing $komment"
set yrange [0.05:*]
set ytics nomirror
set logscale y
# set y2range [0:*]
# set y2tics
set key bmargin horizontal
set xtics $xtics
set xlabel "seconds after $rundate"
set ylabel "average time (ms)"
# set y2label "throughput (arbitraty unit)"

set terminal png size imgwidth,480
set output "$awrdirectory$subdir$runnumber/${runnumber}_e2e.png"

plot "$resultsdir$subdir${runnumber}/e2e.csv" using 1:4 with lines lw $lw lc rgb "red" title "total", \
  "$resultsdir$subdir${runnumber}/e2e.csv" using 1:5 with lines lw $lw lc rgb "orange" title "apptime", \
  "$resultsdir$subdir${runnumber}/e2e.csv" using 1:6 with lines lw $lw lc rgb "cyan" title "database", \
  "$resultsdir$subdir${runnumber}/e2e.csv" using 1:(\$4-\$5-\$6) with lines lw $lw lc rgb "orchid" title "network"

set terminal svg $svgmouse size imgwidth,480 $dynamic
set output "$awrdirectory$subdir$runnumber/${runnumber}_e2e.svg"
replot
END
gnuplot -persist $resultsdir$subdir${runnumber}/e2e.plot

# generate the ash - note that we sometimes only do png as the svg file becomes extremely
# large
cat >> $resultsdir$subdir${runnumber}/ash.plot << END
  set style fill solid noborder
  set boxwidth 1
  set key bmargin horizontal
  set yrange [0.5:*]
  set ylabel 'session counts $ashnotice'
  set title "$runnumber ash session counts $komment"
  set xtics $xtics
  set terminal png size imgwidth,480
  set output "$awrdirectory$subdir$runnumber/${runnumber}_ash.png"
END
cat $resultsdir$subdir${runnumber}/ashplotline.txt >> $resultsdir$subdir${runnumber}/ash.plot

# we conditionally generate the ash in svg format as the file 
# gets very large, typically around 3MB
if test x$largeashok = xyes
then
 
  cat >> $resultsdir$subdir${runnumber}/ash.plot << END
    set terminal svg $svgmouse size imgwidth,480 $dynamic
    set output "$awrdirectory$subdir$runnumber/${runnumber}_ash.svg"
    replot
END
  svgash="<a href="${runnumber}_ash.svg">${runnumber}_ash.svg"
  ashimg=${runnumber}_ash.svg
else
  svgash="not created"
  ashimg=${runnumber}_ash.png
fi
if test $ashcsvcount -gt 0
then
  gnuplot $resultsdir$subdir${runnumber}/ash.plot
fi

xtraawrs=`cat $resultsdir$subdir${runnumber}/xtraawrs.txt`

# write a table with links to all details
cat <<END > $awrdirectory$subdir$runnumber/index.html
<!DOCTYPE html>
<H2>All details for $proccount processes $komment at $rundate</H2>
<table>
<tr><td>Awr report(s)</td><td><a href="${runnumber}_awr.html">${runnumber}_awr.html</a></td> $xtraawrs </tr>
<tr><td>Database cpu and time</td><td><a href="${runnumber}.svg">${runnumber}.svg</a></td><td><a href="${runnumber}.png">${runnumber}.png</a></td></tr>
<tr><td>Sessions and instances</td><td><a href="${runnumber}_instdist.svg">${runnumber}_instdist.svg</a></td><td><a href="${runnumber}_instdist.png">${runnumber}_instdist.png</a></td></tr>
<tr><td>Throughput</td><td><a href="${runnumber}_tp.svg">${runnumber}_tp.svg</a></td><td><a href="${runnumber}_tp.png">${runnumber}_tp.png</a></td></tr>
<tr><td>End2end timing (ms)</td><td><a href="${runnumber}_e2e.svg">${runnumber}_e2e.svg</a></td><td><a href="${runnumber}_e2e.png">${runnumber}_e2e.png</a></td></tr>
END
if test $ashcsvcount -gt 0 
then
  cat <<END >> $awrdirectory$subdir$runnumber/index.html
<tr><td>Ash data</td><td>$svgash</td><td><a href="${runnumber}_ash.png">${runnumber}_ash.png</a></td></tr>
END
fi
echo '</table>' >> $awrdirectory$subdir$runnumber/index.html

if test -f $resultsdir$subdir$runnumber/mtitplotinfo.html
then
  echo '<H3>Parameters at start of run:</H3>' >> $awrdirectory$subdir$runnumber/index.html
  cat $resultsdir$subdir$runnumber/mtitplotinfo.html >> $awrdirectory$subdir$runnumber/index.html
fi

#if test -f $resultsdir$subdir$runnumber/parmatstart.txt
#then
#  echo '<H3>Parameters at start of run:</H3>' >> $awrdirectory$subdir$runnumber/index.html
#  cat $resultsdir$subdir$runnumber/parmatstart.txt | while read x
#  do
#    echo "$x" '<br>'
#  done >> $awrdirectory$subdir$runnumber/index.html
#else
#  echo '<H3>Parameters at <u>end</u> of run:</H3>' >> $awrdirectory$subdir$runnumber/index.html
#  rwloadsim -q -i proccount:=$proccount -i show_changed_values:=1 parameters.rwl | while read x
#  do
#    echo "$x" '<br>'
#  done >> $awrdirectory$subdir$runnumber/index.html
#fi
#echo "proccount=$proccount" >> $awrdirectory$subdir$runnumber/index.html

cat <<END >> $awrdirectory$subdir$runnumber/index.html
<H2>Plots for $komment at $rundate</H2>
<embed src="${runnumber}_tp.svg"><br>
<embed src="${runnumber}.svg"><br>
<embed src="${runnumber}_e2e.svg"><br>
END

if test $ashcsvcount -gt 0 
then
  echo '<embed src="'$ashimg'"><br>' >> $awrdirectory$subdir$runnumber/index.html
fi

cat <<END >> $awrdirectory$subdir$runnumber/index.html
<embed src="${runnumber}_instdist.svg"><br>
END

