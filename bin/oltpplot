#!/bin/bash
# Copyright (c) 2021, 2023 Oracle Corporation
# Licensed under the Universal Permissive License v 1.0
# as shown at https://oss.oracle.com/licenses/upl/

# Changes:
#
#  2-may-2023 bengsig  Allow markers in files
# 27-apr-2023 bengsig  Add -l --latest
# 15-may-2023 bengsig  Add complex query wait/exec times
# 13-may-2023 bengsig  Avoid two confusing axes for wait/exec/total time
# 25-oct-2022 bengsig  Add per second and tranasction wait/exec
# 01-sep-2022 bengsig  Plot bcache, sharedp
# 28-mar-2022 bengsig  Plot ociping last
# 02-feb-2022 bengsig  Add awr markers
# 11-jan-2022 bengsig  Include directory names 
# 28-oct-2021 bengsig  Improve colors in ORA- error plot
# 15-mar-2021 bengsig  Swap two colors
# 11-mar-2021 bengsig  Exit if runnumber isn't good
# 14-jan-2021 bengsig  Move search products graph to y2 axis

. oltp-setup-env

options="-o lhHX:x:c:r: -l xfile:,Xfile:,latest,help,xmarker:,xline:,xcolor:,ash-yrange:,res-yrange:,res-y2range:"
usage="$commandname [-x|-X|--xmarker|--xline 'time text'] [--xcolor=rgbname] [-l|--latest|[-r] runnumber]"

getopt -Q $options -- "$@" || exit 1
options=$(getopt -n $commandname $options -- "$@")
eval set -- "$options"

help=no
markerfile=`mktemp`
trap "rm -f $markerfile" 0 int
xcolor=''

runnumber=0
resyrange=''
ashyrange=''
resy2range=''

while test $1 != '--'
do
  case $1 in 
    --ash-yrange) ashyrange="$2"; shift; shift;
	;;
    --res-yrange) resyrange="$2"; shift; shift;
	;;
    --res-y2range) resy2range="$2"; shift; shift;
	;;
    -r) runnumber=$2; shift; shift;
	;;
    -l|--latest) runnumber=`rwloadsim latest.rwl`; shift;
	;;
    --xfile) cat $2 | while read x; do echo m $x; done >> $markerfile; shift; shift;
        ;;
    --Xfile) cat $2 | while read x; do echo l $x; done >> $markerfile; shift; shift;
        ;;
    -x|--xmarker) echo m $2 >> $markerfile; shift; shift;
        ;;
    -X|--xline) echo l $2 >> $markerfile; shift; shift;
        ;;
    -c|--xcolor) xcolor="--xcolor=$2"; shift; shift;
        ;;
    -h|-H|--help) help=yes; shift;
        ;;
    ?)
      exit 1
      ;;
    esac;
done
shift

if test $help = yes
then
  cat <<HELP
Usage: $usage
-x|--xmarker 'time text' : Put an x-marker at time
-X|--xline   'time text' : Put a vertical line at time
--xcolor rgbname         : Use that rgb name for plotting, default 'blue'
-h|-H|--help             : Print this help
--res-yrange '[ .. ]'    : Change the gnuplot yrange for the first plot
--res-y2range '[ .. ]'   : Change the gnuplot y2range for the first plot
time is either YYYY.MM.DD"T"HH24:MI:SS or a number of seconds
HELP
  exit
fi

# Get directory names from parameters.rwl

# The following is a hack that is required
# for cases where the connect string for the
# system user isn't the same as the connect
# string for the normal users
export RWL_NO_SYSTEM_NEEDED=YES

lw=1 # becomes the linewidth in all plots
dynamic='' # mousing only works without it

if test $# -eq 1 
then
  runnumber=$1
fi

if test $runnumber -eq 0
then
  echo Usage: $commandname runnumber or -l is required 1>&2
  exit 1
fi

eval `rwloadsim -q parameters2shell.rwl`
eval `rwloadsim -q -A 1 subdir.rwl $runnumber`

# note that subdir always both starts and ends with '/'
# and that is has no blanks.
# Hence something like $resultsdir$subdir$runnumber
# will expand to a proper pathname

if test ! -f $resultsdir$subdir$runnumber/env
then
  echo $commandname: $resultsdir$subdir$runnumber does not exist or is not a proper results directory 1>&2
  exit 2
fi


. $resultsdir$subdir$runnumber/env

# Generate csv files and res.plot with headers
# for all other plots
if test -s $markerfile
then
  rwloadsim -q -i runperiod:=$runperiod -i runno:=$runnumber \
  $xcolor --markerfile=$markerfile --starttime=$starttime \
  csvdata.rwl || exit 1
else
  rwloadsim -q -i runperiod:=$runperiod -i runno:=$runnumber \
  --starttime=$starttime csvdata.rwl || exit 1
fi

xtics=60
if test 0$runperiod -gt 600
then
  xtics=120
fi
if test 0$runperiod -gt 1200
then
  xtics=300
fi

unset TERM

cat >> $resultsdir$subdir$runnumber/header.plot << END
  # This fixes the actual graph width
  set lmargin at screen 0.1
  set rmargin at screen 0.9
END

cat $resultsdir$subdir$runnumber/header.plot >> $resultsdir$subdir$runnumber/res.plot

cp $resultsdir$subdir$runnumber/header.plot $resultsdir$subdir${runnumber}/instdist.plot
# Plot instance distribution
if test x$plotactive = xno
then
  cat >> $resultsdir$subdir${runnumber}/instdist.plot <<END
  set title "$runnumber instance distribution $komment"
  set yrange [0:*]
  set key bmargin horizontal
  set xtics $xtics
  set xlabel "seconds after $rundate"
  set ylabel "db sessions per instance"
END
  spiaxes=x1y1
  plotact=''
else
  cat >> $resultsdir$subdir${runnumber}/instdist.plot <<END
  set title "$runnumber sessions and instance distribution $komment"
  set y2range [0:*]
  set yrange [0:$proccount*$rwl_max_pool*1.04]
  set key bmargin horizontal
  set xtics $xtics
  set xlabel "seconds after $rundate"
  set ytics nomirror
  set y2tics
  set y2label "db sessions per instance"
  set ylabel "db/active/open/range in normal pool"
END
  spiaxes=x1y2
  plotact=", \"$resultsdir$subdir${runnumber}/instdist.csv\" using 1:(\$2+\$3+\$4+\$5+\$6+\$7+\$8+\$9) with lines lw $lw lc rgb 'black' axes x1y1 title \"d\" , $proccount*$rwl_min_pool with lines lw $lw lc rgb 'grey90' axes x1y1 notitle, $proccount*$rwl_max_pool with lines lw $lw lc rgb 'grey90' axes x1y1 notitle, \"$resultsdir$subdir${runnumber}/cli.csv\" using 1:6 with lines lw $lw lc rgb 'grey70' axes x1y1 title \"o\" , \"$resultsdir$subdir${runnumber}/cli.csv\" using 1:4 with lines lw $lw lc rgb 'grey50' axes x1y1 title \"a\" "


fi
cat >> $resultsdir$subdir${runnumber}/instdist.plot <<END

set terminal png size imgwidth,480

set output "$awrdirectory$subdir$runnumber/${runnumber}_instdist.png"

plot "$resultsdir$subdir${runnumber}/instdist.csv" using 1:2 with lines lw $lw lc rgb 'magenta' axes $spiaxes title "1", \
  "$resultsdir$subdir${runnumber}/instdist.csv" using 1:3 with lines lw $lw lc rgb 'dark-red' axes $spiaxes title "2", \
  "$resultsdir$subdir${runnumber}/instdist.csv" using 1:4 with lines lw $lw lc rgb 'dark-green' axes $spiaxes title "3", \
  "$resultsdir$subdir${runnumber}/instdist.csv" using 1:5 with lines lw $lw lc rgb 'light-salmon' axes $spiaxes title "4", \
  "$resultsdir$subdir${runnumber}/instdist.csv" using 1:6 with lines lw $lw lc rgb 'dark-yellow' axes $spiaxes title "5", \
  "$resultsdir$subdir${runnumber}/instdist.csv" using 1:7 with lines lw $lw lc rgb 'light-green' axes $spiaxes title "6", \
  "$resultsdir$subdir${runnumber}/instdist.csv" using 1:8 with lines lw $lw lc rgb 'dark-orange' axes $spiaxes title "7", \
  "$resultsdir$subdir${runnumber}/instdist.csv" using 1:9 with lines lw $lw lc rgb 'skyblue' axes $spiaxes title "8"  \
  $plotact


set terminal svg $svgmouse size imgwidth,480 $dynamic
set output "$awrdirectory$subdir$runnumber/${runnumber}_instdist.svg"
replot

# now output the xrange such that all others get the same
set print "$resultsdir$subdir${runnumber}/header.plot" append
print "set xrange [" , GPVAL_X_MIN , ":" , GPVAL_X_MAX , "]"
set print "$resultsdir$subdir${runnumber}/res.plot" append
print "set xrange [" , GPVAL_X_MIN , ":" , GPVAL_X_MAX , "]"

END
gnuplot -persist $resultsdir$subdir${runnumber}/instdist.plot

cp $resultsdir$subdir$runnumber/header.plot $resultsdir$subdir${runnumber}/ping.plot
cp $resultsdir$subdir$runnumber/header.plot $resultsdir$subdir${runnumber}/oerpivot.plot
cp $resultsdir$subdir$runnumber/header.plot $resultsdir$subdir${runnumber}/time.plot
cp $resultsdir$subdir$runnumber/header.plot $resultsdir$subdir${runnumber}/tp.plot
cp $resultsdir$subdir$runnumber/header.plot $resultsdir$subdir${runnumber}/ash.plot
cp $resultsdir$subdir$runnumber/header.plot $resultsdir$subdir${runnumber}/bcache.plot
cp $resultsdir$subdir$runnumber/header.plot $resultsdir$subdir${runnumber}/sharedp.plot
for vname in mo mi sp aw qo ai cq
do
  cp $resultsdir$subdir$runnumber/header.plot $resultsdir$subdir${runnumber}/${vname}_waitexec.plot
done
  

# generate csv file for histograms and fractiles
rwloadsim -q -A 1 histdata.rwl $runnumber

cat > $resultsdir$subdir${runnumber}/hist.plot <<END
set title "$runnumber histogram $komment"
set yrange [0.01:100]
set key bmargin horizontal
set logscale x
set logscale y
set ylabel "percentage in interval"
set xlabel "execution time in ms"
set xrange [0.2:*]

set pointsize 0.01


set terminal png
set output "$awrdirectory$subdir$runnumber/${runnumber}_hist.png"

plot "$resultsdir$subdir${runnumber}/hist.csv" using 1:2:(\$1/2):(\$1) with xerrorbars lw $lw axes x1y1 title "makeorder", \
  "$resultsdir$subdir${runnumber}/hist.csv" using 1:9:(\$1/2):(\$1) with xerrorbars lw $lw axes x1y1 title "queryorder", \
  "$resultsdir$subdir${runnumber}/hist.csv" using 1:3:(\$1/2):(\$1) with xerrorbars lw $lw axes x1y1 title "shiporder", \
  "$resultsdir$subdir${runnumber}/hist.csv" using 1:4:(\$1/2):(\$1) with xerrorbars lw $lw axes x1y1 title "makeinvoices", \
  "$resultsdir$subdir${runnumber}/hist.csv" using 1:6:(\$1/2):(\$1) with xerrorbars lw $lw lc rgb "grey" axes x1y1 title "complex_query", \
  "$resultsdir$subdir${runnumber}/hist.csv" using 1:5:(\$1/2):(\$1) with xerrorbars lw $lw lc rgb "brown" axes x1y1 title "searchproducts", \
  "$resultsdir$subdir${runnumber}/hist.csv" using 1:7:(\$1/2):(\$1) with xerrorbars lw $lw axes x1y1 title "stockup", \
  "$resultsdir$subdir${runnumber}/hist.csv" using 1:8:(\$1/2):(\$1) with xerrorbars lw $lw axes x1y1 title "aw_transaction"

set terminal svg $svgmouse $dynamic
set output "$awrdirectory$subdir$runnumber/${runnumber}_hist.svg"
replot
END
gnuplot -persist $resultsdir$subdir${runnumber}/hist.plot

# And now the fractiles
cat > $resultsdir$subdir${runnumber}/fractiles.plot <<END
set title "$runnumber fractiles $komment"
set ylabel "execution time in s"
set key horizontal bottom outside
set yrange [0.001:*]

set xtics nomirror rotate by -45 scale 0
set style data histogram

set style fill solid noborder
set boxwidth 0.75
set logscale y
set pointsize 0.01

set terminal png
set output "$awrdirectory$subdir$runnumber/${runnumber}_fractiles.png"

plot "$resultsdir$subdir${runnumber}/fractiles.csv" using 6:xtic(1) with boxes title '  99%' lc rgb 'red' \
, "$resultsdir$subdir${runnumber}/fractiles.csv" using 5:xtic(1) with boxes title '  98%' lc rgb 'blue' \
, "$resultsdir$subdir${runnumber}/fractiles.csv" using 4:xtic(1) with boxes title '  95%' lc rgb 'web-blue' \
, "$resultsdir$subdir${runnumber}/fractiles.csv" using 3:xtic(1) with boxes title '  90%' lc rgb 'light-blue' \
, "$resultsdir$subdir${runnumber}/fractiles.csv" using 2:xtic(1) with boxes title '  50%' lc rgb 'pink' \
, "$resultsdir$subdir${runnumber}/fractiles.csv" using 7:xtic(1) with impulses title ' avgw' lw 7 lc rgb 'light-green'

set terminal svg $svgmouse $dynamic
set output "$awrdirectory$subdir$runnumber/${runnumber}_fractiles.svg"
replot
END
gnuplot -persist $resultsdir$subdir${runnumber}/fractiles.plot

# shared pool plot
cat >> $resultsdir$subdir${runnumber}/sharedp.plot <<END
set title "$runnumber shared pool (MB) $komment"
imgwidth=640
set yrange [0:*]
set ytics nomirror
set key bmargin horizontal
set xtics $xtics
set xlabel "seconds after $rundate"

set terminal png size imgwidth,480
set output "$awrdirectory$subdir$runnumber/${runnumber}_sharedp.png"

plot "$resultsdir$subdir${runnumber}/sharedp.csv" using 1:2 with lines lw $lw lc rgb 'magenta' axes x1y1 title "1", \
  "$resultsdir$subdir${runnumber}/sharedp.csv" using 1:3 with lines lw $lw lc rgb 'dark-red' axes x1y1 title "2", \
  "$resultsdir$subdir${runnumber}/sharedp.csv" using 1:4 with lines lw $lw lc rgb 'dark-green' axes x1y1 title "3", \
  "$resultsdir$subdir${runnumber}/sharedp.csv" using 1:5 with lines lw $lw lc rgb 'light-salmon' axes x1y1 title "4", \
  "$resultsdir$subdir${runnumber}/sharedp.csv" using 1:6 with lines lw $lw lc rgb 'dark-yellow' axes x1y1 title "5", \
  "$resultsdir$subdir${runnumber}/sharedp.csv" using 1:7 with lines lw $lw lc rgb 'light-green' axes x1y1 title "6", \
  "$resultsdir$subdir${runnumber}/sharedp.csv" using 1:8 with lines lw $lw lc rgb 'dark-orange' axes x1y1 title "7", \
  "$resultsdir$subdir${runnumber}/sharedp.csv" using 1:9 with lines lw $lw lc rgb 'skyblue' axes x1y1 title "8"

set terminal svg $svgmouse size imgwidth,480 $dynamic
set output "$awrdirectory$subdir$runnumber/${runnumber}_sharedp.svg"
replot
END
gnuplot -persist $resultsdir$subdir${runnumber}/sharedp.plot

# buffer cache plot
cat >> $resultsdir$subdir${runnumber}/bcache.plot <<END
set title "$runnumber buffer cache, shared pool (GiB) $komment"
set yrange [0:*]
set ytics nomirror
set key bmargin horizontal
set xtics $xtics
set xlabel "seconds after $rundate"

set terminal png size imgwidth,480
set output "$awrdirectory$subdir$runnumber/${runnumber}_bcache.png"

plot "$resultsdir$subdir${runnumber}/bcache.csv" using 1:2 with lines lw $lw lc rgb 'magenta' axes x1y1 title "bc 1", \
  "$resultsdir$subdir${runnumber}/bcache.csv" using 1:3 with lines lw $lw lc rgb 'dark-red' axes x1y1 title "2", \
  "$resultsdir$subdir${runnumber}/bcache.csv" using 1:4 with lines lw $lw lc rgb 'dark-green' axes x1y1 title "3", \
  "$resultsdir$subdir${runnumber}/bcache.csv" using 1:5 with lines lw $lw lc rgb 'light-salmon' axes x1y1 title "4", \
  "$resultsdir$subdir${runnumber}/bcache.csv" using 1:6 with lines lw $lw lc rgb 'dark-yellow' axes x1y1 title "5", \
  "$resultsdir$subdir${runnumber}/bcache.csv" using 1:7 with lines lw $lw lc rgb 'light-green' axes x1y1 title "6", \
  "$resultsdir$subdir${runnumber}/bcache.csv" using 1:8 with lines lw $lw lc rgb 'dark-orange' axes x1y1 title "7", \
  "$resultsdir$subdir${runnumber}/bcache.csv" using 1:9 with lines lw $lw lc rgb 'skyblue' axes x1y1 title "8", \
  "$resultsdir$subdir${runnumber}/sharedp.csv" using 1:2 with linespoints lw $lw lc rgb 'magenta' axes x1y1 title "sp 1", \
  "$resultsdir$subdir${runnumber}/sharedp.csv" using 1:3 with linespoints lw $lw lc rgb 'dark-red' axes x1y1 notitle, \
  "$resultsdir$subdir${runnumber}/sharedp.csv" using 1:4 with linespoints lw $lw lc rgb 'dark-green' axes x1y1 notitle, \
  "$resultsdir$subdir${runnumber}/sharedp.csv" using 1:5 with linespoints lw $lw lc rgb 'light-salmon' axes x1y1 notitle, \
  "$resultsdir$subdir${runnumber}/sharedp.csv" using 1:6 with linespoints lw $lw lc rgb 'dark-yellow' axes x1y1 notitle, \
  "$resultsdir$subdir${runnumber}/sharedp.csv" using 1:7 with linespoints lw $lw lc rgb 'light-green' axes x1y1 notitle, \
  "$resultsdir$subdir${runnumber}/sharedp.csv" using 1:8 with linespoints lw $lw lc rgb 'dark-orange' axes x1y1 notitle, \
  "$resultsdir$subdir${runnumber}/sharedp.csv" using 1:9 with linespoints lw $lw lc rgb 'skyblue' axes x1y1 notitle

set terminal svg $svgmouse size imgwidth,480 $dynamic
set output "$awrdirectory$subdir$runnumber/${runnumber}_bcache.svg"
replot
END
gnuplot -persist $resultsdir$subdir${runnumber}/bcache.plot


cat >> $resultsdir$subdir${runnumber}/tp.plot <<END
set title "$runnumber throughput $komment"
set yrange [0:*]
set ytics nomirror
set y2range [0:*]
set y2tics
set key bmargin horizontal
set xtics $xtics
set xlabel "seconds after $rundate"
set y2label "throughput (2)"

set terminal png size imgwidth,480
set output "$awrdirectory$subdir$runnumber/${runnumber}_tp.png"

plot "$resultsdir$subdir${runnumber}/tps.csv" using 1:3 with lines lw $lw lc rgb "red" axes x1y1 title "makeorder", \
  "$resultsdir$subdir${runnumber}/tps.csv" using 1:10 with lines lw $lw lc rgb "green" axes x1y1 title "queryorder", \
  "$resultsdir$subdir${runnumber}/tps.csv" using 1:9 with lines lw $lw lc rgb "salmon" axes x1y1 title "aw_transaction", \
  "$resultsdir$subdir${runnumber}/tps.csv" using 1:11 with lines lw $lw lc rgb "dark-green" axes x1y1 title "awindex_query", \
  "$resultsdir$subdir${runnumber}/tps.csv" using 1:6 with lines lw $lw lc rgb "blue" axes x1y2 title "searchproducts (2)", \
  "$resultsdir$subdir${runnumber}/tps.csv" using 1:5 with lines lw $lw lc rgb "orange" axes x1y2 title "makeinvoices (2)", \
  "$resultsdir$subdir${runnumber}/tps.csv" using 1:7 with lines lw $lw lc rgb "cyan" axes x1y2 title "complex_query (2)", \
  "$resultsdir$subdir${runnumber}/tps.csv" using 1:4 with lines lw $lw lc rgb "light-blue" axes x1y2 title "shiporder (2)", \
  "$resultsdir$subdir${runnumber}/tps.csv" using 1:8 with lines lw $lw lc rgb "purple" axes x1y2 title "stockup (2)"
  

set terminal svg $svgmouse size imgwidth,480 $dynamic
set output "$awrdirectory$subdir$runnumber/${runnumber}_tp.svg"
replot
END
gnuplot -persist $resultsdir$subdir${runnumber}/tp.plot

for vname in mo mi sp aw qo ai cq
do
  case $vname in
    mo) fulvnam=make_order; ecolumn=3; wcolumn=2; ;;
    mi) fulvnam=make_invoice; ecolumn=5; wcolumn=4; ;;
    sp) fulvnam=search_product; ecolumn=7; wcolumn=6; ;;
    aw) fulvnam=aw_transaction; ecolumn=9; wcolumn=8; ;;
    qo) fulvnam=query_order; ecolumn=11; wcolumn=10; ;;
    ai) fulvnam=aw_index_query; ecolumn=13; wcolumn=12; ;;
    cq) fulvnam=complex_query; ecolumn=15; wcolumn=14; ;;
  esac
  cat >> $resultsdir$subdir${runnumber}/${vname}_waitexec.plot <<END
  set title "wait, execute, total time for $fulvnam"
  set yrange [0.1:*]
  # set ytics nomirror
  # set y2range [0.1:*]
  set ytics mirror
  set logscale y
  # set logscale y2
  # set y2tics
  set key bmargin horizontal
  set xtics $xtics
  set xlabel "seconds after $rundate"
  # set y2label "wait, exec time (ms)"
  set ylabel "time (ms)"

  set terminal png size imgwidth,480
  set output "$awrdirectory$subdir$runnumber/${runnumber}_${vname}_waitexec.png"

  plot "$resultsdir$subdir${runnumber}/waitexec.csv" using 1:(1000*\$$wcolumn) with lines lw $lw lc rgb "blue" axes x1y1 title "wait", \
    "$resultsdir$subdir${runnumber}/waitexec.csv" using 1:(1000*\$$ecolumn) with lines lw $lw lc rgb "green" axes x1y1 title "exec" , \
    "$resultsdir$subdir${runnumber}/waitexec.csv" using 1:(1000*(\$$wcolumn+\$$ecolumn)) with lines lw $lw lc rgb "red" axes x1y1 title "total"

  set terminal svg $svgmouse size imgwidth,480 $dynamic
  set output "$awrdirectory$subdir$runnumber/${runnumber}_${vname}_waitexec.svg"
  replot
END
  gnuplot -persist $resultsdir$subdir${runnumber}/${vname}_waitexec.plot
done


# make the primary plot called res.svg/res.png
cat $resultsdir$subdir$runnumber/tps.y2range >> $resultsdir$subdir$runnumber/res.plot 

# pick user ranges if any
if test ! -z "$resyrange" 
then
  echo "set yrange $resyrange" >> $resultsdir$subdir$runnumber/res.plot
fi
if test ! -z "$resy2range" 
then
  echo "set y2range $resy2range" >> $resultsdir$subdir$runnumber/res.plot
fi

cat >> $resultsdir$subdir$runnumber/res.plot <<END
set key bmargin horizontal
set title "$runnumber $komment"
set y2tics
set ytics nomirror
set xtics $xtics
set xlabel "seconds after $rundate"
set terminal png size imgwidth,480 
set output "$awrdirectory$subdir$runnumber/${runnumber}.png"
END

# For the full/lemans types, the primary plot has
# througput and dbtime
if test $showfail = yes
then
  failline=" '$resultsdir$subdir${runnumber}/tps.csv' using 1:12 with lines lw $lw lc rgb 'pink' axes x1y2 title 'dropped', "
else
  failline=' '
fi

cat >> $resultsdir$subdir$runnumber/res.plot <<END
set ylabel "seconds/s" 

plot "$resultsdir$subdir${runnumber}/tps.csv" using 1:2 with lines lw $lw lc rgb 'red' axes x1y2 title "tps", \
  $failline  "$resultsdir$subdir${runnumber}/dbtime.csv" using 1:3 with lines lw $lw lc rgb 'blue' axes x1y1 title "dbtime", \
  "$resultsdir$subdir${runnumber}/dbtime.csv" using 1:2 with lines lw $lw lc rgb 'dark-green' axes x1y1 title "dbcpu", \
  "$resultsdir$subdir${runnumber}/cli.csv" using 1:(\$2+\$3) with lines lw $lw lc rgb 'cyan' axes x1y1 title "clicpu"
END

cat >> $resultsdir$subdir$runnumber/res.plot <<END
set terminal svg $svgmouse size imgwidth,480 $dynamic
set output "$awrdirectory$subdir$runnumber/${runnumber}.svg"
replot
END
gnuplot $resultsdir$subdir$runnumber/res.plot

# make the alternative plot
# For full/lemans, the alternative is ping
cat >> $resultsdir$subdir${runnumber}/ping.plot <<END
set title "$runnumber $komment"
set logscale y
set key bmargin horizontal
# set y2tics
# set ytics nomirror
set xtics $xtics
set xlabel "seconds after $rundate"
set ylabel "ping time (ms)" 
set terminal png size imgwidth,480 
set output "$awrdirectory$subdir$runnumber/${runnumber}_ping.png"

plot "$resultsdir$subdir${runnumber}/ping.csv" using 1:3 with lines lc 2 lw $lw axes x1y1 title "rwl ping" , \
  "$resultsdir$subdir${runnumber}/dbtime.csv" using 1:5 with lines lc 7 lw $lw axes x1y1 title "dba ping" , \
  "$resultsdir$subdir${runnumber}/ping.csv" using 1:2 with lines lc 1 lw $lw axes x1y1 title "ociping" 

set terminal svg $svgmouse size imgwidth,480 $dynamic
set output "$awrdirectory$subdir$runnumber/${runnumber}_ping.svg"
replot
END
gnuplot $resultsdir$subdir${runnumber}/ping.plot

oercount=0

# get the shell variables to control if oer and ash should be done
. $resultsdir$subdir${runnumber}/oerashvars.sh

declare -a errcol
errcol=(red cyan dark-yellow skyblue web-green magenta chartreuse blue magenta gold olive coral khaki plum brown4 tan1 greenyellow gray30 gray50 gray80)

# create the plots with OER display
if test $oercount -gt 0 
then
  set -- $oerlist
  cat >> $resultsdir$subdir${runnumber}/oerpivot.plot << END
    set style fill solid noborder
    set boxwidth 2
    set key bmargin horizontal
    set yrange [0.5:*]
    set logscale y
    set xtics $xtics
    set title "$runnumber OER occurences $komment"
    set terminal svg $svgmouse size imgwidth,480 $dynamic
    set output "$awrdirectory$subdir$runnumber/${runnumber}_oerpivot.svg"

END
  o=$oercount
  ec=0
  while test $o -ge 1
  do
    if test $o -eq $oercount
    then
      echo -n "plot " 
    else
      echo -n ", " 
    fi
    echo -n "'$resultsdir$subdir${runnumber}/oerpivot.csv' using 1:("
    i=`expr $o + 1`; 
    while test $i -gt 2
    do
      echo -n '$'$i'+'
      i=`expr $i - 1`; 
    done
    echo -n '$2) with boxes title "'$1'" lc rgb "'${errcol[$ec]}'"'
    o=`expr $o - 1`; 
    shift
    ec=`expr $ec + 1`
    test $ec -ge ${#errcol[*]} && ec=0
  done >> $resultsdir$subdir${runnumber}/oerpivot.plot
  cat >> $resultsdir$subdir${runnumber}/oerpivot.plot << END

    set terminal png size imgwidth,480 
    set output "$awrdirectory$subdir$runnumber/${runnumber}_oerpivot.png"
    replot
END
  gnuplot $resultsdir$subdir${runnumber}/oerpivot.plot

fi


# generate the ash - note that we sometimes only do png as the svg file becomes extremely
# large
cat >> $resultsdir$subdir${runnumber}/ash.plot << END
  set style fill solid noborder
  set boxwidth 1
  set key bmargin horizontal
  set yrange [0.5:*]
  set ylabel 'session counts $ashnotice'
  set title "$runnumber ash session counts $komment"
  set xtics $xtics
  set terminal png size imgwidth,480
  set output "$awrdirectory$subdir$runnumber/${runnumber}_ash.png"
END
cat $resultsdir$subdir${runnumber}/ashplotline.txt >> $resultsdir$subdir${runnumber}/ash.plot

if test ! -z "$ashyrange"
then
  echo "set yrange $ashyrange" >> $resultsdir$subdir${runnumber}/ash.plot
  echo "set output '$awrdirectory$subdir$runnumber/${runnumber}_ash.png'" >> $resultsdir$subdir${runnumber}/ash.plot

  echo replot >> $resultsdir$subdir${runnumber}/ash.plot
fi

# we conditionally generate the ash in svg format as the file 
# gets very large, typically around 3MB
if test x$largeashok = xyes
then
 
  cat >> $resultsdir$subdir${runnumber}/ash.plot << END
    set terminal svg $svgmouse size imgwidth,480 $dynamic
    set output "$awrdirectory$subdir$runnumber/${runnumber}_ash.svg"
    replot
END
  svgash="<a href="${runnumber}_ash.svg">${runnumber}_ash.svg"
  ashimg=${runnumber}_ash.svg
else
  svgash="not created"
  ashimg=${runnumber}_ash.png
fi
if test $ashcsvcount -gt 0
then
  gnuplot $resultsdir$subdir${runnumber}/ash.plot
fi

xtraawrs=`cat $resultsdir$subdir${runnumber}/xtraawrs.txt`

# write a table with links to all details
cat <<END > $awrdirectory$subdir$runnumber/index.html
<!DOCTYPE html>
<H2>All details for $proccount processes $komment at $rundate</H2>
<table>
<tr><td>Awr report(s)</td><td><a href="${runnumber}_awr.html">${runnumber}_awr.html</a></td> $xtraawrs </tr>
<tr><td>Throughput and resources *</td><td><a href="${runnumber}.svg">${runnumber}.svg</a></td><td><a href="${runnumber}.png">${runnumber}.png</a></td></tr>
<tr><td>Sessions and instances *</td><td><a href="${runnumber}_instdist.svg">${runnumber}_instdist.svg</a></td><td><a href="${runnumber}_instdist.png">${runnumber}_instdist.png</a></td></tr>
<tr><td>Buffer cache/shared pool</td><td><a href="${runnumber}_bcache.svg">${runnumber}_bcache.svg</a></td><td><a href="${runnumber}_bcache.png">${runnumber}_bcache.png</a></td></tr>
<tr><td>Individual throughput</td><td><a href="${runnumber}_tp.svg">${runnumber}_tp.svg</a></td><td><a href="${runnumber}_tp.png">${runnumber}_tp.png</a></td></tr>
<tr><td>Ping rates *</td><td><a href="${runnumber}_ping.svg">${runnumber}_ping.svg</a></td><td><a href="${runnumber}_ping.png">${runnumber}_ping.png</a></td></tr>
END
if test $ashcsvcount -gt 0 
then
  cat <<END >> $awrdirectory$subdir$runnumber/index.html
<tr><td>Ash data *</td><td>$svgash</td><td><a href="${runnumber}_ash.png">${runnumber}_ash.png</a></td></tr>
END
fi

if test $oercount -gt 0 
then
  cat <<END >> $awrdirectory$subdir$runnumber/index.html
<tr><td>ORA errors *</td><td><a href="${runnumber}_oerpivot.svg">${runnumber}_oerpivot.svg</a></td><td><a href="${runnumber}_oerpivot.png">${runnumber}_oerpivot.png</a></td></tr>
END
fi
cat <<END >> $awrdirectory$subdir$runnumber/index.html
<tr><td>Fractiles of execution times</td><td><a href="${runnumber}_fractiles.svg">${runnumber}_fractiles.svg</a></td><td><a href="${runnumber}_fractiles.png">${runnumber}_fractiles.png</a></td></tr>
<tr><td>Wait/exec times for make_order</td><td><a href="${runnumber}_mo_waitexec.svg">${runnumber}_mo_waitexec.svg</a></td><td><a href="${runnumber}_mo_waitexec.png">${runnumber}_mo_waitexec.png</a></td></tr>
<tr><td>Wait/exec times for query_order</td><td><a href="${runnumber}_qo_waitexec.svg">${runnumber}_qo_waitexec.svg</a></td><td><a href="${runnumber}_qo_waitexec.png">${runnumber}_qo_waitexec.png</a></td></tr>
<tr><td>Wait/exec times for search_products</td><td><a href="${runnumber}_sp_waitexec.svg">${runnumber}_sp_waitexec.svg</a></td><td><a href="${runnumber}_sp_waitexec.png">${runnumber}_sp_waitexec.png</a></td></tr>
<tr><td>Wait/exec times for aw_transaction</td><td><a href="${runnumber}_aw_waitexec.svg">${runnumber}_aw_waitexec.svg</a></td><td><a href="${runnumber}_aw_waitexec.png">${runnumber}_aw_waitexec.png</a></td></tr>
<tr><td>Wait/exec times for aw_index_query</td><td><a href="${runnumber}_ai_waitexec.svg">${runnumber}_ai_waitexec.svg</a></td><td><a href="${runnumber}_ai_waitexec.png">${runnumber}_ai_waitexec.png</a></td></tr>
<tr><td>Wait/exec times for complex_query</td><td><a href="${runnumber}_cq_waitexec.svg">${runnumber}_cq_waitexec.svg</a></td><td><a href="${runnumber}_cq_waitexec.png">${runnumber}_cq_waitexec.png</a></td></tr>
<tr><td>Output (stdout and stderr) from run</td><td><a href="$runnumber.txt">$runnumber.txt</a></td><td> </td></tr>
</table>
<H3>Notes:</H3>
<ul>
<li>Awr reports can fail if instance changes have been happening</li>
<li>Ping rates do not include session get; oci is OCIPing over the normal connection, rwl/dba are using select 1 from dual over respectively the normal and the dba connection</li>
<li>Graphs as svg are clickable, but cannot be embedded in e.g. confluence</li>
<li>Graphs marked with * are directly included below</li>
<li>Buffer cache is shown with lines, shared pool with lines and points</li>
<li>Dark red markings on x-axes indicate periods for awr snapshot gathering</li>
<li>Scroll down to see graphs alligned on runperiod</li>
<li>Input for gnuplot at $resultsdir$subdir$runnumber </li>
<li>Generated files at $awrdirectory$subdir$runnumber </li>
END
tty -s && echo '<li>Stdout and stderr may not be available</li>' >> $awrdirectory$subdir$runnumber/index.html
echo '</ul>' >> $awrdirectory$subdir$runnumber/index.html

# We no longer do these as they weren't readable anyway
# <tr><td>Histograms of execution times</td><td><a href="${runnumber}_hist.svg">${runnumber}_hist.svg</a></td><td><a href="${runnumber}_hist.png">${runnumber}_hist.png</a></td></tr>
# <li>Histograms are hard to read - use the fractiles</li>

# Show overall error counts if any
rwloadsim -q -i runno:=$runnumber oerhtml.rwl >> $awrdirectory$subdir$runnumber/index.html
if test $oercount -gt 0 
then
  echo '<H3>Errors grouped by second</H3>' >> $awrdirectory$subdir$runnumber/index.html
  cat $resultsdir$subdir$runnumber/oertable.html >> $awrdirectory$subdir$runnumber/index.html
else
  echo '<H3>No errors in run</H3>' >> $awrdirectory$subdir$runnumber/index.html
fi

if test -f $resultsdir$subdir$runnumber/extraout.txt
then
  echo '<H3>Extra information for run:</H3>' >> $awrdirectory$subdir$runnumber/index.html
  cat $resultsdir$subdir$runnumber/extraout.txt | while read x
  do
    echo "$x" '<br>'
  done >> $awrdirectory$subdir$runnumber/index.html
fi

if test -f $resultsdir$subdir$runnumber/parmatstart.txt
then
  echo '<H3>Parameters at start of run:</H3>' >> $awrdirectory$subdir$runnumber/index.html
  cat $resultsdir$subdir$runnumber/parmatstart.txt | while read x
  do
    echo "$x" '<br>'
  done >> $awrdirectory$subdir$runnumber/index.html
else
  echo '<H3>Parameters at <u>end</u> of run:</H3>' >> $awrdirectory$subdir$runnumber/index.html
  rwloadsim -q -i proccount:=$proccount -i show_changed_values:=1 parameters.rwl | while read x
  do
    echo "$x" '<br>'
  done >> $awrdirectory$subdir$runnumber/index.html
fi
echo "proccount=$proccount" >> $awrdirectory$subdir$runnumber/index.html

cat <<END >> $awrdirectory$subdir$runnumber/index.html
<H2>Plots for $komment at $rundate</H2>
<embed src="${runnumber}.svg"><br>
END

if test $oercount -gt 0 -a -f $awrdirectory$subdir$runnumber/${runnumber}_oerpivot.png
then
  echo '<embed src="'${runnumber}_oerpivot.svg'"><br>' >> $awrdirectory$subdir$runnumber/index.html
fi

cat <<END >> $awrdirectory$subdir$runnumber/index.html
<embed src="${runnumber}_instdist.svg"><br>
<embed src="${runnumber}_ping.svg"><br>
END

if test $ashcsvcount -gt 0 
then
  echo '<embed src="'$ashimg'"><br>' >> $awrdirectory$subdir$runnumber/index.html
fi

