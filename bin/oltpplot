#!/bin/bash
# Copyright (c) 2021, 2024 Oracle Corporation
# Licensed under the Universal Permissive License v 1.0
# as shown at https://oss.oracle.com/licenses/upl/

# Changes:
#
# 17-may-2024 bengsig  add PGA
#  9-may-2024 bengsig  add drop%
#  8-may-2024 bengsig  global osstat
#  2-may-2024 bengsig  --fractiles-dropped option to oltpplot
# 28-apr-2024 bengsig  osstat
#  3-apr-2024 bengsig  better graph label
# 27-mar-2024 bengsig  cstorm by initiated and logged on
# 20-mar-2024 bengsig  cstorm
#  4-mar-2024 bengsig  dtime, atime
# 24-jan-2024 bengsig  Include batch pool counts in cli.csv, plot total open
#  5-dec-2023 bengsig  Changed html heading with --ses-simplified
#  4-dec-2023 bengsig  Add --no-client-cpu, --no-x2label, --ses-simplified
# 30-nov-2023 bengsig  More personalization of graphs
# 22-nov-2023 bengsig  Add --gnuplot-extra
# 23-sep-2023 bengsig  Add timestamps to res.plot and ping.plot
#  9-aug-2023 bengsig  Add --ses-yrange, --ses-y2range
#  1-aug-2023 bengsig  Add oltpxcset markers from oltpxcrun
#  2-may-2023 bengsig  Allow markers in files
# 27-apr-2023 bengsig  Add -l --latest
# 15-may-2023 bengsig  Add complex query wait/exec times
# 13-may-2023 bengsig  Avoid two confusing axes for wait/exec/total time
# 25-oct-2022 bengsig  Add per second and tranasction wait/exec
# 01-sep-2022 bengsig  Plot bcache, sharedp
# 28-mar-2022 bengsig  Plot ociping last
# 02-feb-2022 bengsig  Add awr markers
# 11-jan-2022 bengsig  Include directory names 
# 28-oct-2021 bengsig  Improve colors in ORA- error plot
# 15-mar-2021 bengsig  Swap two colors
# 11-mar-2021 bengsig  Exit if runnumber isn't good
# 14-jan-2021 bengsig  Move search products graph to y2 axis

. oltp-setup-env

options="-o lhHX:x:c:r:k: -l no-x2label,no-client-cpu,no-awr-interval,key:,xfile:,Xfile:,latest,help,xmarker:,xline:,xcolor:,ses-y2range:,ses-simplified,ses-yrange:,ash-yrange:,res-yrange:,res-y2range:,gnuplot-extra:,xlabel:,no-titlerunnumber,titletext:,e2e-no-logscale,fractiles-dropped"
usage="$commandname [-x|-X|--xmarker|--xline 'time text'] [--xcolor=rgbname] [-l|--latest|[-r] runnumber] [-k|--key key] [{gnuplot range/extra settings}]"

getopt -Q $options -- "$@" || exit 1
options=$(getopt -n $commandname $options -- "$@")
eval set -- "$options"

help=no
markerfile=`mktemp`
trap "rm -f $markerfile" 0 int
xcolor=''

runnumber=0
sesyrange=''
sesy2range=''
sessimplified=no
resyrange=''
ashyrange=''
resy2range=''
gnuplotextra=''
noawrinterval=''
xlabel=''
x2label=yes
mykey="$RWLOLTP_NAME"
wantlatest=no
titlerunnumber=yes
titletext=''
clientcpu=yes
e2esettings='set yrange [0.05:*]; set logscale y'
fractdrop=no

while test $1 != '--'
do
  case $1 in 
    --fractiles-dropped)
       fractdrop=yes
       shift;
       ;;
    --e2e-no-logscale)
       e2esettings='set yrange [0:*]'
       shift;
       ;;
    --gnuplot-extra) 
          if test -r $2
	  then
	    gnuplotextra=$2
	  else
	    echo "oltpplot: Cannot read $2 - --gnuplot-extra will be ignored" 2>&1
	  fi
	  shift; shift;
	;;
    --titletext) titletext="$2"; shift; shift;
	;;
    --xlabel) xlabel="$2"; shift; shift;
	;;
    --ses-y2range) sesy2range="$2"; shift; shift;
	;;
    --ses-yrange) sesyrange="$2"; shift; shift;
	;;
    --ash-yrange) ashyrange="$2"; shift; shift;
	;;
    --res-yrange) resyrange="$2"; shift; shift;
	;;
    --res-y2range) resy2range="$2"; shift; shift;
	;;
    -r) runnumber=$2; shift; shift;
	;;
    --no-titlerunnumber) titlerunnumber=no; shift;
	;;
    -k|--key) mykey=$2; shift; shift;
	;;
    --ses-simplified) sessimplified='yes'; shift;
	;;
    --no-x2label) x2label='no'; shift;
	;;
    --no-client-cpu) clientcpu='no'; shift;
	;;
    --no-awr-interval) noawrinterval='--no-awr-interval'; shift;
	;;
    -l|--latest) wantlatest=yes; shift;
	;;
    --xfile) cat $2 | while read x; do echo m $x; done >> $markerfile; shift; shift;
        ;;
    --Xfile) cat $2 | while read x; do echo l $x; done >> $markerfile; shift; shift;
        ;;
    -x|--xmarker) echo m $2 >> $markerfile; shift; shift;
        ;;
    -X|--xline) echo l $2 >> $markerfile; shift; shift;
        ;;
    -c|--xcolor) xcolor="--xcolor=$2"; shift; shift;
        ;;
    -h|-H|--help) help=yes; shift;
        ;;
    ?)
      exit 1
      ;;
    esac;
done
shift

if test $wantlatest = yes
then
    runnumber=`rwloadsim --mykey=$mykey latest.rwl`
    echo oltpplot: latest runnumber for $mykey is $runnumber
fi

if test $help = yes
then
  cat <<HELP
Usage: $usage
-x|--xmarker 'time text' : Put an x-marker at time
-X|--xline   'time text' : Put a vertical line at time
--xcolor rgbname         : Use that rgb name for plotting, default 'blue'
--res-yrange '[ .. ]'    : Set gnuplot yrange for seconds/s
--res-y2range '[ .. ]'   : Set gnuplot y2range for throughput
--ses-yrange '[ .. ]'    : Set gnuplot yrange for database open/active counts
--ses-y2range '[ .. ]'   : Set gnuplot y2range for instance distribution
--ses-simplified         : Make a simplified session graph without instances
--ash-yrange '[ .. ]'    : Set gnuplot yrange for sessions in ash plot
--fractiles-dropped      : Include dropped transactions as taking 2s in fractiles plot
--e2e-no-logscale        : In the end-to-end timing graphs, do not use logarithmic scale
--gnuplot-extra file     : Add the contents of file to all graphs
--no-awr-interval        : Do not indicate the intervals for awr snapshot generation
--no-client-cpu          : Do not include the client cpu curve
--no-titlerunnumber      : Do not include runnumber on relevant graphs
--xlabel 'some text'     : Replace standard xlabel "seconds after ..."  on relevant graphs
--no-x2label             : Do not print timestamps above graphs
--titletext 'some text'  : Replace original komment on relevant graphs
-h|-H|--help             : Print this help
time for -x|-X is either YYYY.MM.DD"T"HH24:MI:SS or a number of seconds
HELP
  exit
fi

# Get directory names from parameters.rwl

# The following is a hack that is required
# for cases where the connect string for the
# system user isn't the same as the connect
# string for the normal users
export RWL_NO_SYSTEM_NEEDED=YES

lw=1 # becomes the linewidth in all plots
dynamic='' # mousing only works without it


if test $# -eq 1 
then
  runnumber=$1
fi

if test $runnumber -eq 0
then
  echo Usage: $commandname runnumber or -l is required 1>&2
  exit 1
fi

eval `rwloadsim -q parameters2shell.rwl`
eval `rwloadsim -q -A 1 subdir.rwl $runnumber`
eval `rwloadsim -q plotinfo.rwl --myrunnumber=$runnumber`

if test $fractdrop = no
then
  fracttext="Execution time fractiles ($droppct% dropped)"
else
  fracttext='Execution time fractiles (dropped "cost" 2s)'
fi
# note that this will overwrite gnuplotjs that we no longer use
. gnuplot-check-version

# note that subdir always both starts and ends with '/'
# and that is has no blanks.
# Hence something like $resultsdir$subdir$runnumber
# will expand to a proper pathname

if test ! -f $resultsdir$subdir$runnumber/env
then
  echo $commandname: $resultsdir$subdir$runnumber does not exist or is not a proper results directory 1>&2
  exit 2
fi


. $resultsdir$subdir$runnumber/env

if test -f $resultsdir$subdir$runnumber/markers.txt
then
  cat $resultsdir$subdir$runnumber/markers.txt |
  while read x
  do
    echo l $x
  done >> $markerfile
fi


# Generate csv files and res.plot with headers
# for all other plots
if test -s $markerfile
then
  cp $markerfile $resultsdir$subdir$runnumber/csvmarkers.input
  rwloadsim -q -i runperiod:=$runperiod -i runno:=$runnumber \
  $xcolor --markerfile=$markerfile --starttime=$starttime \
  $noawrinterval csvdata.rwl || exit 1
else
  rwloadsim -q -i runperiod:=$runperiod -i runno:=$runnumber \
  --starttime=$starttime $noawrinterval csvdata.rwl || exit 1
fi

# re-read env file as csvdata may have added a new runperiod value
. $resultsdir$subdir$runnumber/env

x2format='"%H:%M:%S"'
if test 0$runperiod -gt 300
then
  x2format='"%H:%M"'
fi

xtics=60
if test 0$runperiod -gt 600
then
  xtics=120
  x2format='"%H:%M"'
fi
if test 0$runperiod -gt 1200
then
  xtics=300
fi

unset TERM

cat >> $resultsdir$subdir$runnumber/header.plot << END
  # This fixes the actual graph width
  set lmargin at screen 0.1
  set rmargin at screen 0.9
END

# honor various parameters to change graphs
if test ! -z "$gnuplotextra"
then
  cat $gnuplotextra >> $resultsdir$subdir$runnumber/header.plot
fi

if test -z "$titletext"
then
  titletext="$komment"
fi

if test -z "$xlabel"
then
  xlabel="seconds after $rundate"
fi

if test $titlerunnumber = yes
then
  runnumberintitle=$runnumber
else
  runnumberintitle=''
fi

cat $resultsdir$subdir$runnumber/header.plot >> $resultsdir$subdir$runnumber/res.plot

cp $resultsdir$subdir$runnumber/header.plot $resultsdir$subdir${runnumber}/osstat.plot
# source the file that does it
. osstat-plot-include
cp $resultsdir$subdir$runnumber/header.plot $resultsdir$subdir${runnumber}/instdist.plot
# Plot instance distribution
if test x$plotactive = xno
then
  cat >> $resultsdir$subdir${runnumber}/instdist.plot <<END
  set title "$runnumberintitle instance distribution $titletext"
  set yrange [0:*]
  set key bmargin horizontal
  set xtics $xtics
  set xlabel "$xlabel"
  set ylabel "db sessions per instance"
END
  imgheight=480
  plotses="'$resultsdir$subdir${runnumber}/instdist.csv' using 1:2 with lines lw $lw lc rgb 'magenta' axes x1y1 title '1', \
  '$resultsdir$subdir${runnumber}/instdist.csv' using 1:3 with lines lw $lw lc rgb 'dark-red' axes x1y1 title '2', \
  '$resultsdir$subdir${runnumber}/instdist.csv' using 1:4 with lines lw $lw lc rgb 'dark-green' axes x1y1 title '3', \
  '$resultsdir$subdir${runnumber}/instdist.csv' using 1:5 with lines lw $lw lc rgb 'light-salmon' axes x1y1 title '4', \
  '$resultsdir$subdir${runnumber}/instdist.csv' using 1:6 with lines lw $lw lc rgb 'dark-yellow' axes x1y1 title '5', \
  '$resultsdir$subdir${runnumber}/instdist.csv' using 1:7 with lines lw $lw lc rgb 'light-green' axes x1y1 title '6', \
  '$resultsdir$subdir${runnumber}/instdist.csv' using 1:8 with lines lw $lw lc rgb 'dark-orange' axes x1y1 title '7', \
  '$resultsdir$subdir${runnumber}/instdist.csv' using 1:9 with lines lw $lw lc rgb 'skyblue' axes x1y1 title '8'"
else
  if test $sessimplified = no
  then
    imgheight=480
    cat >> $resultsdir$subdir${runnumber}/instdist.plot <<END
    set title "$runnumberintitle sessions and instance distribution $titletext"
    set y2range [0:*]
    set yrange [0:$proccount*$rwl_max_pool*1.04]
    set key bmargin horizontal
    set xtics $xtics nomirror
    # set x2data time
    # set x2tics nomirror
    # set timefmt "%Y.%m.%d:%H:%M:%S"
    # set format x2 $x2format
    set xlabel "$xlabel"
    set ytics nomirror
    set y2tics
    set y2label "db sessions per instance"
    set ylabel "db, total open, open/active in normal pool"
END
  else
    imgheight=320
    cat >> $resultsdir$subdir${runnumber}/instdist.plot <<END
    set title "$runnumberintitle sessions in $titletext"
    set yrange [0:*]
    set key bmargin horizontal
    set xtics $xtics nomirror
    set xlabel "$xlabel"
    set ytics nomirror
    set ylabel "db, total open, open/active in normal pool"
END
  fi
  if test ! -z "$sesyrange" 
  then
    echo "set yrange $sesyrange" >> $resultsdir$subdir$runnumber/instdist.plot
  fi
  if test ! -z "$sesy2range" 
  then
    echo "set y2range $sesy2range" >> $resultsdir$subdir$runnumber/instdist.plot
  fi
  if test $sessimplified = yes
  then
    plotses="'$resultsdir$subdir${runnumber}/instdist.csv' using 1:(\$2+\$3+\$4+\$5+\$6+\$7+\$8+\$9) with lines lw $lw lc rgb 'black' axes x1y1 title 'database' , \
     $proccount*$rwl_min_pool with lines lw $lw lc rgb 'grey90' axes x1y1 notitle, \
     $proccount*$rwl_max_pool with lines lw $lw lc rgb 'grey90' axes x1y1 notitle, \
    '$resultsdir$subdir${runnumber}/cli.csv' using 1:(\$6+\$7) with lines lw $lw lc rgb 'web-blue' axes x1y1 title 'total' , \
    '$resultsdir$subdir${runnumber}/cli.csv' using 1:6 with lines lw $lw lc rgb 'dark-green' axes x1y1 title 'open' , \
    '$resultsdir$subdir${runnumber}/cli.csv' using 1:4 with lines lw $lw lc rgb 'dark-orange' axes x1y1 title 'active' "
  else
    plotses="'$resultsdir$subdir${runnumber}/instdist.csv' using 1:2 with lines lw $lw lc rgb 'magenta' axes x1y2 title '1', \
    '$resultsdir$subdir${runnumber}/instdist.csv' using 1:3 with lines lw $lw lc rgb 'dark-red' axes x1y2 title '2', \
    '$resultsdir$subdir${runnumber}/instdist.csv' using 1:4 with lines lw $lw lc rgb 'dark-green' axes x1y2 title '3', \
    '$resultsdir$subdir${runnumber}/instdist.csv' using 1:5 with lines lw $lw lc rgb 'light-salmon' axes x1y2 title '4', \
    '$resultsdir$subdir${runnumber}/instdist.csv' using 1:6 with lines lw $lw lc rgb 'dark-yellow' axes x1y2 title '5', \
    '$resultsdir$subdir${runnumber}/instdist.csv' using 1:7 with lines lw $lw lc rgb 'light-green' axes x1y2 title '6', \
    '$resultsdir$subdir${runnumber}/instdist.csv' using 1:8 with lines lw $lw lc rgb 'dark-orange' axes x1y2 title '7', \
    '$resultsdir$subdir${runnumber}/instdist.csv' using 1:9 with lines lw $lw lc rgb 'skyblue' axes x1y2 title '8', \
    '$resultsdir$subdir${runnumber}/instdist.csv' using 1:(\$2+\$3+\$4+\$5+\$6+\$7+\$8+\$9) with lines lw $lw lc rgb 'black' axes x1y1 title 'd' , \
    $proccount*$rwl_min_pool with lines lw $lw lc rgb 'grey90' axes x1y1 notitle, \
    $proccount*$rwl_max_pool with lines lw $lw lc rgb 'grey90' axes x1y1 notitle, \
    '$resultsdir$subdir${runnumber}/cli.csv' using 1:(\$6+\$7) with lines lw $lw lc rgb 'web-blue' axes x1y1 title 't' , \
    '$resultsdir$subdir${runnumber}/cli.csv' using 1:6 with lines lw $lw lc rgb 'grey70' axes x1y1 title 'o' , \
    '$resultsdir$subdir${runnumber}/cli.csv' using 1:4 with lines lw $lw lc rgb 'grey50' axes x1y1 title 'a' "
  fi


fi
cat >> $resultsdir$subdir${runnumber}/instdist.plot <<END

set terminal png size imgwidth,$imgheight

set output "$awrdirectory$subdir$runnumber/${runnumber}_instdist.png"

plot $plotses


set terminal svg $svgmouse size imgwidth,$imgheight $dynamic
set output "$awrdirectory$subdir$runnumber/${runnumber}_instdist.svg"
replot

# now output the xrange such that all others get the same
set print "$resultsdir$subdir${runnumber}/header.plot" append
print "set xrange [" , GPVAL_X_MIN , ":" , GPVAL_X_MAX , "]"
set print "$resultsdir$subdir${runnumber}/res.plot" append
print "set xrange [" , GPVAL_X_MIN , ":" , GPVAL_X_MAX , "]"
set print "$resultsdir$subdir${runnumber}/xrange.csv"
print GPVAL_X_MIN , " " , GPVAL_X_MAX

END
gnuplot -persist $resultsdir$subdir${runnumber}/instdist.plot



cp $resultsdir$subdir$runnumber/header.plot $resultsdir$subdir${runnumber}/ping.plot
cp $resultsdir$subdir$runnumber/header.plot $resultsdir$subdir${runnumber}/oerpivot.plot
cp $resultsdir$subdir$runnumber/header.plot $resultsdir$subdir${runnumber}/time.plot
cp $resultsdir$subdir$runnumber/header.plot $resultsdir$subdir${runnumber}/tp.plot
cp $resultsdir$subdir$runnumber/header.plot $resultsdir$subdir${runnumber}/ash.plot
cp $resultsdir$subdir$runnumber/header.plot $resultsdir$subdir${runnumber}/bcache.plot
cp $resultsdir$subdir$runnumber/header.plot $resultsdir$subdir${runnumber}/memory.plot
cp $resultsdir$subdir$runnumber/header.plot $resultsdir$subdir${runnumber}/sharedp.plot
cp $resultsdir$subdir$runnumber/header.plot $resultsdir$subdir${runnumber}/pga.plot
for vname in mo mi sp aw qo ai cq
do
  cp $resultsdir$subdir$runnumber/header.plot $resultsdir$subdir${runnumber}/${vname}_waitexec.plot
done
  

# generate csv file for histograms and fractiles
rwloadsim -q -A 2 histdata.rwl $runnumber $fractdrop

cat > $resultsdir$subdir${runnumber}/hist.plot <<END
set title "$runnumberintitle histogram $titletext"
set yrange [0.01:100]
set key bmargin horizontal
set logscale x
set logscale y
set ylabel "percentage in interval"
set xlabel "execution time in ms"
set xrange [0.2:*]

set pointsize 0.01


set terminal png
set output "$awrdirectory$subdir$runnumber/${runnumber}_hist.png"

plot "$resultsdir$subdir${runnumber}/hist.csv" using 1:2:(\$1/2):(\$1) with xerrorbars lw $lw axes x1y1 title "makeorder", \
  "$resultsdir$subdir${runnumber}/hist.csv" using 1:9:(\$1/2):(\$1) with xerrorbars lw $lw axes x1y1 title "queryorder", \
  "$resultsdir$subdir${runnumber}/hist.csv" using 1:3:(\$1/2):(\$1) with xerrorbars lw $lw axes x1y1 title "shiporder", \
  "$resultsdir$subdir${runnumber}/hist.csv" using 1:4:(\$1/2):(\$1) with xerrorbars lw $lw axes x1y1 title "makeinvoices", \
  "$resultsdir$subdir${runnumber}/hist.csv" using 1:6:(\$1/2):(\$1) with xerrorbars lw $lw lc rgb "grey" axes x1y1 title "complex_query", \
  "$resultsdir$subdir${runnumber}/hist.csv" using 1:5:(\$1/2):(\$1) with xerrorbars lw $lw lc rgb "brown" axes x1y1 title "searchproducts", \
  "$resultsdir$subdir${runnumber}/hist.csv" using 1:7:(\$1/2):(\$1) with xerrorbars lw $lw axes x1y1 title "stockup", \
  "$resultsdir$subdir${runnumber}/hist.csv" using 1:8:(\$1/2):(\$1) with xerrorbars lw $lw axes x1y1 title "aw_transaction"

set terminal svg $svgmouse $dynamic
set output "$awrdirectory$subdir$runnumber/${runnumber}_hist.svg"
replot
END
gnuplot -persist $resultsdir$subdir${runnumber}/hist.plot

# And now the fractiles
cat > $resultsdir$subdir${runnumber}/fractiles.plot <<END
set title "$runnumberintitle fractiles $titletext"
set ylabel "execution time in s"
set key horizontal bottom outside
set yrange [0.001:*]

set xtics nomirror rotate by -45 scale 0
set style data histogram

set style fill solid noborder
set boxwidth 0.75
set logscale y
set pointsize 0.01

set terminal png
set output "$awrdirectory$subdir$runnumber/${runnumber}_fractiles.png"

plot "$resultsdir$subdir${runnumber}/fractiles.csv" using 6:xtic(1) with boxes title '  99%' lc rgb 'red' \
, "$resultsdir$subdir${runnumber}/fractiles.csv" using 5:xtic(1) with boxes title '  98%' lc rgb 'blue' \
, "$resultsdir$subdir${runnumber}/fractiles.csv" using 4:xtic(1) with boxes title '  95%' lc rgb 'web-blue' \
, "$resultsdir$subdir${runnumber}/fractiles.csv" using 3:xtic(1) with boxes title '  90%' lc rgb 'light-blue' \
, "$resultsdir$subdir${runnumber}/fractiles.csv" using 2:xtic(1) with boxes title '  50%' lc rgb 'pink' \
, "$resultsdir$subdir${runnumber}/fractiles.csv" using 7:xtic(1) with impulses title ' avgw' lw 7 lc rgb 'light-green'

set terminal svg $svgmouse $dynamic
set output "$awrdirectory$subdir$runnumber/${runnumber}_fractiles.svg"
replot
END
gnuplot -persist $resultsdir$subdir${runnumber}/fractiles.plot

# buffer cache plot
cat >> $resultsdir$subdir${runnumber}/bcache.plot <<END
set title "$runnumberintitle Buffer cache (GiB) $titletext"
imgwidth=640
set yrange [0:*]
set ytics nomirror
set key bmargin horizontal
set xtics $xtics
set xlabel "$xlabel"

set terminal png size imgwidth,480
set output "$awrdirectory$subdir$runnumber/${runnumber}_bcache.png"

plot "$resultsdir$subdir${runnumber}/bcache.csv" using 1:2 with lines lw $lw lc rgb 'magenta' axes x1y1 title "1", \
  "$resultsdir$subdir${runnumber}/bcache.csv" using 1:3 with lines lw $lw lc rgb 'dark-red' axes x1y1 title "2", \
  "$resultsdir$subdir${runnumber}/bcache.csv" using 1:4 with lines lw $lw lc rgb 'dark-green' axes x1y1 title "3", \
  "$resultsdir$subdir${runnumber}/bcache.csv" using 1:5 with lines lw $lw lc rgb 'light-salmon' axes x1y1 title "4", \
  "$resultsdir$subdir${runnumber}/bcache.csv" using 1:6 with lines lw $lw lc rgb 'dark-yellow' axes x1y1 title "5", \
  "$resultsdir$subdir${runnumber}/bcache.csv" using 1:7 with lines lw $lw lc rgb 'light-green' axes x1y1 title "6", \
  "$resultsdir$subdir${runnumber}/bcache.csv" using 1:8 with lines lw $lw lc rgb 'dark-orange' axes x1y1 title "7", \
  "$resultsdir$subdir${runnumber}/bcache.csv" using 1:9 with lines lw $lw lc rgb 'skyblue' axes x1y1 title "8"

set terminal svg $svgmouse size imgwidth,480 $dynamic
set output "$awrdirectory$subdir$runnumber/${runnumber}_bcache.svg"
replot
END
gnuplot -persist $resultsdir$subdir${runnumber}/bcache.plot

# shared pool plot
cat >> $resultsdir$subdir${runnumber}/sharedp.plot <<END
set title "$runnumberintitle shared pool (GiB) $titletext"
imgwidth=640
set yrange [0:*]
set ytics nomirror
set key bmargin horizontal
set xtics $xtics
set xlabel "$xlabel"

set terminal png size imgwidth,480
set output "$awrdirectory$subdir$runnumber/${runnumber}_sharedp.png"

plot "$resultsdir$subdir${runnumber}/sharedp.csv" using 1:2 with lines lw $lw lc rgb 'magenta' axes x1y1 title "1", \
  "$resultsdir$subdir${runnumber}/sharedp.csv" using 1:3 with lines lw $lw lc rgb 'dark-red' axes x1y1 title "2", \
  "$resultsdir$subdir${runnumber}/sharedp.csv" using 1:4 with lines lw $lw lc rgb 'dark-green' axes x1y1 title "3", \
  "$resultsdir$subdir${runnumber}/sharedp.csv" using 1:5 with lines lw $lw lc rgb 'light-salmon' axes x1y1 title "4", \
  "$resultsdir$subdir${runnumber}/sharedp.csv" using 1:6 with lines lw $lw lc rgb 'dark-yellow' axes x1y1 title "5", \
  "$resultsdir$subdir${runnumber}/sharedp.csv" using 1:7 with lines lw $lw lc rgb 'light-green' axes x1y1 title "6", \
  "$resultsdir$subdir${runnumber}/sharedp.csv" using 1:8 with lines lw $lw lc rgb 'dark-orange' axes x1y1 title "7", \
  "$resultsdir$subdir${runnumber}/sharedp.csv" using 1:9 with lines lw $lw lc rgb 'skyblue' axes x1y1 title "8"

set terminal svg $svgmouse size imgwidth,480 $dynamic
set output "$awrdirectory$subdir$runnumber/${runnumber}_sharedp.svg"
replot
END
gnuplot -persist $resultsdir$subdir${runnumber}/sharedp.plot

# PGA plot
cat >> $resultsdir$subdir${runnumber}/pga.plot <<END
set title "$runnumberintitle shared pool (GiB) $titletext"
imgwidth=640
set yrange [0:*]
set ytics nomirror
set key bmargin horizontal
set xtics $xtics
set xlabel "$xlabel"

set terminal png size imgwidth,480
set output "$awrdirectory$subdir$runnumber/${runnumber}_pga.png"

plot "$resultsdir$subdir${runnumber}/pga.csv" using 1:2 with lines lw $lw lc rgb 'magenta' axes x1y1 title "1", \
  "$resultsdir$subdir${runnumber}/pga.csv" using 1:3 with lines lw $lw lc rgb 'dark-red' axes x1y1 title "2", \
  "$resultsdir$subdir${runnumber}/pga.csv" using 1:4 with lines lw $lw lc rgb 'dark-green' axes x1y1 title "3", \
  "$resultsdir$subdir${runnumber}/pga.csv" using 1:5 with lines lw $lw lc rgb 'light-salmon' axes x1y1 title "4", \
  "$resultsdir$subdir${runnumber}/pga.csv" using 1:6 with lines lw $lw lc rgb 'dark-yellow' axes x1y1 title "5", \
  "$resultsdir$subdir${runnumber}/pga.csv" using 1:7 with lines lw $lw lc rgb 'light-green' axes x1y1 title "6", \
  "$resultsdir$subdir${runnumber}/pga.csv" using 1:8 with lines lw $lw lc rgb 'dark-orange' axes x1y1 title "7", \
  "$resultsdir$subdir${runnumber}/pga.csv" using 1:9 with lines lw $lw lc rgb 'skyblue' axes x1y1 title "8"

set terminal svg $svgmouse size imgwidth,480 $dynamic
set output "$awrdirectory$subdir$runnumber/${runnumber}_pga.svg"
replot
END
gnuplot -persist $resultsdir$subdir${runnumber}/pga.plot

# buffer cache plot
cat >> $resultsdir$subdir${runnumber}/memory.plot <<END
set title "$runnumberintitle Database memory (GiB) $titletext"
set yrange [0:*]
set ytics nomirror
set key bmargin horizontal
set xtics $xtics
set xlabel "$xlabel"

set terminal png size imgwidth,480
set output "$awrdirectory$subdir$runnumber/${runnumber}_memory.png"

plot "$resultsdir$subdir${runnumber}/bcache.csv" using 1:2 with lines lw $lw lc rgb 'magenta' axes x1y1 title "bc 1", \
  "$resultsdir$subdir${runnumber}/bcache.csv" using 1:3 with lines lw $lw lc rgb 'dark-red' axes x1y1 title "2", \
  "$resultsdir$subdir${runnumber}/bcache.csv" using 1:4 with lines lw $lw lc rgb 'dark-green' axes x1y1 title "3", \
  "$resultsdir$subdir${runnumber}/bcache.csv" using 1:5 with lines lw $lw lc rgb 'light-salmon' axes x1y1 title "4", \
  "$resultsdir$subdir${runnumber}/bcache.csv" using 1:6 with lines lw $lw lc rgb 'dark-yellow' axes x1y1 title "5", \
  "$resultsdir$subdir${runnumber}/bcache.csv" using 1:7 with lines lw $lw lc rgb 'light-green' axes x1y1 title "6", \
  "$resultsdir$subdir${runnumber}/bcache.csv" using 1:8 with lines lw $lw lc rgb 'dark-orange' axes x1y1 title "7", \
  "$resultsdir$subdir${runnumber}/bcache.csv" using 1:9 with lines lw $lw lc rgb 'skyblue' axes x1y1 title "8", \
  "$resultsdir$subdir${runnumber}/sharedp.csv" using 1:2 with linespoints lw $lw ps 0.5 lc rgb 'magenta' axes x1y1 title "sp 1", \
  "$resultsdir$subdir${runnumber}/sharedp.csv" using 1:3 with linespoints lw $lw lc rgb 'dark-red' axes x1y1 notitle, \
  "$resultsdir$subdir${runnumber}/sharedp.csv" using 1:4 with linespoints lw $lw lc rgb 'dark-green' axes x1y1 notitle, \
  "$resultsdir$subdir${runnumber}/sharedp.csv" using 1:5 with linespoints lw $lw lc rgb 'light-salmon' axes x1y1 notitle, \
  "$resultsdir$subdir${runnumber}/sharedp.csv" using 1:6 with linespoints lw $lw lc rgb 'dark-yellow' axes x1y1 notitle, \
  "$resultsdir$subdir${runnumber}/sharedp.csv" using 1:7 with linespoints lw $lw lc rgb 'light-green' axes x1y1 notitle, \
  "$resultsdir$subdir${runnumber}/sharedp.csv" using 1:8 with linespoints lw $lw lc rgb 'dark-orange' axes x1y1 notitle, \
  "$resultsdir$subdir${runnumber}/sharedp.csv" using 1:9 with linespoints lw $lw lc rgb 'skyblue' axes x1y1 notitle, \
  "$resultsdir$subdir${runnumber}/pga.csv" using 1:2 with linespoints lw $lw ps 0.5 lc rgb 'magenta' axes x1y1 title "pga 1", \
  "$resultsdir$subdir${runnumber}/pga.csv" using 1:3 with linespoints lw $lw lc rgb 'dark-red' axes x1y1 notitle, \
  "$resultsdir$subdir${runnumber}/pga.csv" using 1:4 with linespoints lw $lw lc rgb 'dark-green' axes x1y1 notitle, \
  "$resultsdir$subdir${runnumber}/pga.csv" using 1:5 with linespoints lw $lw lc rgb 'light-salmon' axes x1y1 notitle, \
  "$resultsdir$subdir${runnumber}/pga.csv" using 1:6 with linespoints lw $lw lc rgb 'dark-yellow' axes x1y1 notitle, \
  "$resultsdir$subdir${runnumber}/pga.csv" using 1:7 with linespoints lw $lw lc rgb 'light-green' axes x1y1 notitle, \
  "$resultsdir$subdir${runnumber}/pga.csv" using 1:8 with linespoints lw $lw lc rgb 'dark-orange' axes x1y1 notitle, \
  "$resultsdir$subdir${runnumber}/pga.csv" using 1:9 with linespoints lw $lw lc rgb 'skyblue' axes x1y1 notitle

set terminal svg $svgmouse size imgwidth,480 $dynamic
set output "$awrdirectory$subdir$runnumber/${runnumber}_memory.svg"
replot
END
gnuplot -persist $resultsdir$subdir${runnumber}/memory.plot


cat >> $resultsdir$subdir${runnumber}/tp.plot <<END
set title "$runnumberintitle throughput $titletext"
set yrange [0:*]
set ytics nomirror
set y2range [0:*]
set y2tics
set key bmargin horizontal
set xtics $xtics
set xlabel "$xlabel"
set y2label "throughput (2)"

set terminal png size imgwidth,480
set output "$awrdirectory$subdir$runnumber/${runnumber}_tp.png"

plot "$resultsdir$subdir${runnumber}/tps.csv" using 1:3 with lines lw $lw lc rgb "red" axes x1y1 title "makeorder", \
  "$resultsdir$subdir${runnumber}/tps.csv" using 1:10 with lines lw $lw lc rgb "green" axes x1y1 title "queryorder", \
  "$resultsdir$subdir${runnumber}/tps.csv" using 1:9 with lines lw $lw lc rgb "salmon" axes x1y1 title "aw_transaction", \
  "$resultsdir$subdir${runnumber}/tps.csv" using 1:11 with lines lw $lw lc rgb "dark-green" axes x1y1 title "awindex_query", \
  "$resultsdir$subdir${runnumber}/tps.csv" using 1:6 with lines lw $lw lc rgb "blue" axes x1y2 title "searchproducts (2)", \
  "$resultsdir$subdir${runnumber}/tps.csv" using 1:5 with lines lw $lw lc rgb "orange" axes x1y2 title "makeinvoices (2)", \
  "$resultsdir$subdir${runnumber}/tps.csv" using 1:7 with lines lw $lw lc rgb "cyan" axes x1y2 title "complex_query (2)", \
  "$resultsdir$subdir${runnumber}/tps.csv" using 1:4 with lines lw $lw lc rgb "light-blue" axes x1y2 title "shiporder (2)", \
  "$resultsdir$subdir${runnumber}/tps.csv" using 1:8 with lines lw $lw lc rgb "purple" axes x1y2 title "stockup (2)"
  

set terminal svg $svgmouse size imgwidth,480 $dynamic
set output "$awrdirectory$subdir$runnumber/${runnumber}_tp.svg"
replot
END
gnuplot -persist $resultsdir$subdir${runnumber}/tp.plot

for vname in mo mi sp aw qo ai cq
do
  case $vname in
    mo) fulvnam=make'\\'_order; ecolumn=3; wcolumn=2; acolumn=16; dcolumn=17; ;;
    mi) fulvnam=make'\\'_invoice; ecolumn=5; wcolumn=4; acolumn=18; dcolumn=19; ;;
    sp) fulvnam=search'\\'_product; ecolumn=7; wcolumn=6; acolumn=20; dcolumn=21; ;;
    aw) fulvnam=aw'\\'_transaction; ecolumn=9; wcolumn=8; acolumn=22; dcolumn=23; ;;
    qo) fulvnam=query'\\'_order; ecolumn=11; wcolumn=10; acolumn=24; dcolumn=25; ;;
    ai) fulvnam=aw'\\'_index'\\'_query; ecolumn=13; wcolumn=12; acolumn=26; dcolumn=27; ;;
    cq) fulvnam=complex'\\'_query; ecolumn=15; wcolumn=14; acolumn=28; dcolumn=29; ;;
  esac

  cat >> $resultsdir$subdir${runnumber}/${vname}_waitexec.plot <<END
  set yrange [0:*]
  # set ytics nomirror
  set ytics mirror
  $e2esettings
  set key bmargin horizontal
  set xtics $xtics
  set xlabel "$xlabel"
  # set y2label "wait, exec time (ms)"
  set ylabel "time (ms)"

  set terminal png size imgwidth,480
  set output "$awrdirectory$subdir$runnumber/${runnumber}_${vname}_waitexec.png"
END

  if test $adtime = yes
  then
    cat >> $resultsdir$subdir${runnumber}/${vname}_waitexec.plot <<END
    set title "wait/queue, execute, total, app, db, network time for $fulvnam"
    plot "$resultsdir$subdir${runnumber}/waitexec.csv" using 1:(1000*\$$wcolumn) with lines lw $lw lc rgb "blue" axes x1y1 title "wait/queue", \
      "$resultsdir$subdir${runnumber}/waitexec.csv" using 1:(1000*\$$acolumn) with lines lw $lw lc rgb "orange" axes x1y1 title "apptime" , \
      "$resultsdir$subdir${runnumber}/waitexec.csv" using 1:(1000*\$$ecolumn) with lines lw $lw lc rgb "sea-green" axes x1y1 title "exec" , \
      "$resultsdir$subdir${runnumber}/waitexec.csv" using 1:(1000*\$$dcolumn) with lines lw $lw lc rgb "cyan" axes x1y1 title "dbtime" , \
      "$resultsdir$subdir${runnumber}/waitexec.csv" using 1:(1000*(\$$wcolumn+\$$ecolumn)) with lines lw $lw lc rgb "red" axes x1y1 title "total" , \
      "$resultsdir$subdir${runnumber}/waitexec.csv" using 1:(1000*(\$$ecolumn-\$$dcolumn-\$$acolumn)) with lines lw $lw lc rgb "orchid" axes x1y1 title "network" 

END
  else
    cat >> $resultsdir$subdir${runnumber}/${vname}_waitexec.plot <<END
    set title "wait/queue, execute, total time for $fulvnam" 
    plot "$resultsdir$subdir${runnumber}/waitexec.csv" using 1:(1000*\$$wcolumn) with lines lw $lw lc rgb "blue" axes x1y1 title "wait/queue", \
      "$resultsdir$subdir${runnumber}/waitexec.csv" using 1:(1000*\$$ecolumn) with lines lw $lw lc rgb "sea-green" axes x1y1 title "exec" , \
      "$resultsdir$subdir${runnumber}/waitexec.csv" using 1:(1000*(\$$wcolumn+\$$ecolumn)) with lines lw $lw lc rgb "red" axes x1y1 title "total" 

END
  fi

  cat >> $resultsdir$subdir${runnumber}/${vname}_waitexec.plot <<END
  set terminal svg $svgmouse size imgwidth,480 $dynamic
  set output "$awrdirectory$subdir$runnumber/${runnumber}_${vname}_waitexec.svg"
  replot
END
  gnuplot -persist $resultsdir$subdir${runnumber}/${vname}_waitexec.plot
done


# make the primary plot called res.svg/res.png
cat $resultsdir$subdir$runnumber/tps.y2range >> $resultsdir$subdir$runnumber/res.plot 

# pick user ranges if any
if test ! -z "$resyrange" 
then
  echo "set yrange $resyrange" >> $resultsdir$subdir$runnumber/res.plot
fi
if test ! -z "$resy2range" 
then
  echo "set y2range $resy2range" >> $resultsdir$subdir$runnumber/res.plot
fi

cat >> $resultsdir$subdir$runnumber/res.plot <<END
set key bmargin horizontal
set title "$runnumberintitle $titletext"
set y2tics
set ytics nomirror
set xtics $xtics nomirror
set x2data time
set x2tics nomirror
set timefmt "%Y.%m.%d:%H:%M:%S"
set format x2 $x2format
set xlabel "$xlabel"
set terminal png size imgwidth,480 
set output "$awrdirectory$subdir$runnumber/${runnumber}.png"
END
# set x2range in res.plot
rwloadsim -q x2range.rwl $runnumber `cat $resultsdir$subdir${runnumber}/xrange.csv` $resultsdir$subdir$runnumber/res.plot
if test $x2label = no
then
  echo set nox2tics >> $resultsdir$subdir$runnumber/res.plot
fi

# For the full/lemans types, the primary plot has
# througput and dbtime
if test $showfail = yes
then
  failline=" '$resultsdir$subdir${runnumber}/tps.csv' using 1:12 with lines lw $lw lc rgb 'pink' axes x1y2 title 'dropped', "
else
  failline=' '
fi

if test $clientcpu = yes
then
  plotclient=", '$resultsdir$subdir${runnumber}/cli.csv' using 1:(\$2+\$3) with lines lw $lw lc rgb 'cyan' axes x1y1 title 'clicpu' "
else
  plotclient=''
fi

if test $x2label = yes
then
  plotx2label=", '$resultsdir$subdir${runnumber}/cli.csv' using 8:(0) with lines lw 0 lc rgb 'black' axes x2y1 notitle "
else
  plotx2label=''
fi

# "$resultsdir$subdir${runnumber}/cli.csv" using 1:(\$2+\$3) with lines lw $lw lc rgb 'cyan' axes x1y1 title "clicpu", \

cat >> $resultsdir$subdir$runnumber/res.plot <<END
set ylabel "seconds/s" 

plot "$resultsdir$subdir${runnumber}/tps.csv" using 1:2 with lines lw $lw lc rgb 'red' axes x1y2 title "tps", \
  $failline  "$resultsdir$subdir${runnumber}/dbtime.csv" using 1:3 with lines lw $lw lc rgb 'blue' axes x1y1 title "dbtime", \
  "$resultsdir$subdir${runnumber}/dbtime.csv" using 1:2 with lines lw $lw lc rgb 'dark-green' axes x1y1 title "dbcpu" \
  $plotclient $plotx2label

END

cat >> $resultsdir$subdir$runnumber/res.plot <<END
set terminal svg $svgmouse size imgwidth,480 $dynamic
set output "$awrdirectory$subdir$runnumber/${runnumber}.svg"
replot
END
gnuplot $resultsdir$subdir$runnumber/res.plot

# make the alternative plot
# For full/lemans, the alternative is ping
cat >> $resultsdir$subdir${runnumber}/ping.plot <<END
set title "$runnumberintitle ping $titletext"
set logscale y
set key bmargin horizontal
# set y2tics
# set ytics nomirror
set xtics $xtics nomirror
set x2data time
set x2tics nomirror
set timefmt "%Y.%m.%d:%H:%M:%S"
set format x2 $x2format
set xlabel "$xlabel"
set ylabel "ping time (ms)" 
set terminal png size imgwidth,480 
set output "$awrdirectory$subdir$runnumber/${runnumber}_ping.png"
END
# set x2range in ping.plot
rwloadsim -q x2range.rwl $runnumber `cat $resultsdir$subdir${runnumber}/xrange.csv` $resultsdir$subdir$runnumber/ping.plot
if test $x2label = no
then
  echo set nox2tics >> $resultsdir$subdir$runnumber/ping.plot
fi

cat >> $resultsdir$subdir${runnumber}/ping.plot <<END
plot "$resultsdir$subdir${runnumber}/ping.csv" using 1:3 with lines lc 2 lw $lw axes x1y1 title "rwl ping" , \
  "$resultsdir$subdir${runnumber}/dbtime.csv" using 1:5 with lines lc 7 lw $lw axes x1y1 title "dba ping" , \
  "$resultsdir$subdir${runnumber}/ping.csv" using 1:2 with lines lc 1 lw $lw axes x1y1 title "ociping" \
  $plotx2label

set terminal svg $svgmouse size imgwidth,480 $dynamic
set output "$awrdirectory$subdir$runnumber/${runnumber}_ping.svg"
replot
END
gnuplot $resultsdir$subdir${runnumber}/ping.plot

oercount=0

# get the shell variables to control if oer and ash should be done
. $resultsdir$subdir${runnumber}/oerashvars.sh

declare -a errcol
errcol=(red cyan dark-yellow skyblue web-green magenta chartreuse blue magenta gold olive coral khaki plum brown4 tan1 greenyellow gray30 gray50 gray80)

# create the plots with OER display
if test $oercount -gt 0 
then
  set -- $oerlist
  cat >> $resultsdir$subdir${runnumber}/oerpivot.plot << END
    set style fill solid noborder
    set boxwidth 2
    set key bmargin horizontal
    set yrange [0.5:*]
    set logscale y
    set xtics $xtics
    set title "$runnumberintitle OER occurences $titletext"
    set terminal svg $svgmouse size imgwidth,480 $dynamic
    set output "$awrdirectory$subdir$runnumber/${runnumber}_oerpivot.svg"

END
  o=$oercount
  ec=0
  while test $o -ge 1
  do
    if test $o -eq $oercount
    then
      echo -n "plot " 
    else
      echo -n ", " 
    fi
    echo -n "'$resultsdir$subdir${runnumber}/oerpivot.csv' using 1:("
    i=`expr $o + 1`; 
    while test $i -gt 2
    do
      echo -n '$'$i'+'
      i=`expr $i - 1`; 
    done
    echo -n '$2) with boxes title "'$1'" lc rgb "'${errcol[$ec]}'"'
    o=`expr $o - 1`; 
    shift
    ec=`expr $ec + 1`
    test $ec -ge ${#errcol[*]} && ec=0
  done >> $resultsdir$subdir${runnumber}/oerpivot.plot
  cat >> $resultsdir$subdir${runnumber}/oerpivot.plot << END

    set terminal png size imgwidth,480 
    set output "$awrdirectory$subdir$runnumber/${runnumber}_oerpivot.png"
    replot
END
  gnuplot $resultsdir$subdir${runnumber}/oerpivot.plot

fi


# generate the ash - note that we sometimes only do png as the svg file becomes extremely
# large
cat >> $resultsdir$subdir${runnumber}/ash.plot << END
  set style fill solid noborder
  set boxwidth 1
  set key bmargin horizontal
  set yrange [0.5:*]
  set ylabel 'session counts $ashnotice'
  set title "$runnumberintitle ash session counts $titletext"
  set xtics $xtics
  set terminal png size imgwidth,480
  set output "$awrdirectory$subdir$runnumber/${runnumber}_ash.png"
END
cat $resultsdir$subdir${runnumber}/ashplotline.txt >> $resultsdir$subdir${runnumber}/ash.plot

if test ! -z "$ashyrange"
then
  echo "set yrange $ashyrange" >> $resultsdir$subdir${runnumber}/ash.plot
  echo "set output '$awrdirectory$subdir$runnumber/${runnumber}_ash.png'" >> $resultsdir$subdir${runnumber}/ash.plot

  echo replot >> $resultsdir$subdir${runnumber}/ash.plot
fi

# we conditionally generate the ash in svg format as the file 
# gets very large, typically around 3MB
if test x$largeashok = xyes
then
 
  cat >> $resultsdir$subdir${runnumber}/ash.plot << END
    set terminal svg $svgmouse size imgwidth,480 $dynamic
    set output "$awrdirectory$subdir$runnumber/${runnumber}_ash.svg"
    replot
END
  svgash="<a href="${runnumber}_ash.svg">${runnumber}_ash.svg"
  ashimg=${runnumber}_ash.svg
else
  svgash="not created"
  ashimg=${runnumber}_ash.png
fi
if test $ashcsvcount -gt 0
then
  gnuplot $resultsdir$subdir${runnumber}/ash.plot
fi

xtraawrs=`cat $resultsdir$subdir${runnumber}/xtraawrs.txt`

if test $sessimplified = no
then
  sesinsttext='Sessions and instances'
else
  sesinsttext='Sessions'
fi

# write a table with links to all details
cat <<END > $awrdirectory$subdir$runnumber/index.html
<!DOCTYPE html>
<H2>All details for $proccount processes $titletext at $rundate</H2>
<table>
<tr><td>Awr report(s)</td><td><a href="${runnumber}_awr.html">${runnumber}_awr.html</a></td> $xtraawrs </tr>
<tr><td>Throughput and resources *</td><td><a href="${runnumber}.svg">${runnumber}.svg</a></td><td><a href="${runnumber}.png">${runnumber}.png</a></td></tr>
<tr><td>$sesinsttext *</td><td><a href="${runnumber}_instdist.svg">${runnumber}_instdist.svg</a></td><td><a href="${runnumber}_instdist.png">${runnumber}_instdist.png</a></td></tr>
<tr><td>Database memory</td><td><a href="${runnumber}_memory.svg">${runnumber}_memory.svg</a></td><td><a href="${runnumber}_memory.png">${runnumber}_memory.png</a></td></tr>
<tr><td>Buffer cache</td><td><a href="${runnumber}_bcache.svg">${runnumber}_bcache.svg</a></td><td><a href="${runnumber}_bcache.png">${runnumber}_bcache.png</a></td></tr>
<tr><td>Shared pool</td><td><a href="${runnumber}_sharedp.svg">${runnumber}_sharedp.svg</a></td><td><a href="${runnumber}_sharedp.png">${runnumber}_sharedp.png</a></td></tr>
<tr><td>PGA</td><td><a href="${runnumber}_pga.svg">${runnumber}_pga.svg</a></td><td><a href="${runnumber}_pga.png">${runnumber}_pga.png</a></td></tr>
<tr><td>Individual throughput</td><td><a href="${runnumber}_tp.svg">${runnumber}_tp.svg</a></td><td><a href="${runnumber}_tp.png">${runnumber}_tp.png</a></td></tr>
<tr><td>Ping rates *</td><td><a href="${runnumber}_ping.svg">${runnumber}_ping.svg</a></td><td><a href="${runnumber}_ping.png">${runnumber}_ping.png</a></td></tr>
END
if test -f $awrdirectory$subdir$runnumber/${runnumber}_osstat.svg
then
  osstatembed='<embed src="'${runnumber}'_osstat.svg"><br> '
  cat <<END >> $awrdirectory$subdir$runnumber/index.html
    <tr>
    <td>Database server cpu (per instance) *</td>
    <td><a href="${runnumber}_osstat.svg">${runnumber}_osstat.svg</a></td>
    <td><a href="${runnumber}_osstat.png">${runnumber}_osstat.png</a></td>
    </tr>
    <tr>
    <td>Database server cpu (total)</td>
    <td><a href="${runnumber}_osstatg.svg">${runnumber}_osstatg.svg</a></td>
    <td><a href="${runnumber}_osstatg.png">${runnumber}_osstatg.png</a></td>
    </tr>
END
else
  osstatembed=''
fi

if test $ashcsvcount -gt 0 
then
  cat <<END >> $awrdirectory$subdir$runnumber/index.html
<tr><td>Ash data *</td><td>$svgash</td><td><a href="${runnumber}_ash.png">${runnumber}_ash.png</a></td></tr>
END
fi

if test $oercount -gt 0 
then
  cat <<END >> $awrdirectory$subdir$runnumber/index.html
    <tr>
    <td>ORA errors *</td>
    <td><a href="${runnumber}_oerpivot.svg">${runnumber}_oerpivot.svg</a></td>
    <td><a href="${runnumber}_oerpivot.png">${runnumber}_oerpivot.png</a></td>
    </tr>
END
fi

if test $cstormwidth -gt 0
then
  cat <<END >> $awrdirectory$subdir$runnumber/index.html
    <tr>
    <td>Extra connection storm by initiated</td>
    <td><a href="${runnumber}_cstormbeg.svg">${runnumber}_cstormbeg.svg</a></td>
    <td><a href="${runnumber}_cstormbeg.png">${runnumber}_cstormbeg.png</a></td>
    </tr>
    <tr>
    <td>Extra connection storm by logged on</td>
    <td><a href="${runnumber}_cstormend.svg">${runnumber}_cstormend.svg</a></td>
    <td><a href="${runnumber}_cstormend.png">${runnumber}_cstormend.png</a></td>
    </tr>
END
fi

cat <<END >> $awrdirectory$subdir$runnumber/index.html
<tr><td>$fracttext</td><td><a href="${runnumber}_fractiles.svg">${runnumber}_fractiles.svg</a></td><td><a href="${runnumber}_fractiles.png">${runnumber}_fractiles.png</a></td></tr>
<tr><td>End-to-end times for make_order</td><td><a href="${runnumber}_mo_waitexec.svg">${runnumber}_mo_waitexec.svg</a></td><td><a href="${runnumber}_mo_waitexec.png">${runnumber}_mo_waitexec.png</a></td></tr>
<tr><td>End-to-end times for query_order</td><td><a href="${runnumber}_qo_waitexec.svg">${runnumber}_qo_waitexec.svg</a></td><td><a href="${runnumber}_qo_waitexec.png">${runnumber}_qo_waitexec.png</a></td></tr>
<tr><td>End-to-end times for search_products</td><td><a href="${runnumber}_sp_waitexec.svg">${runnumber}_sp_waitexec.svg</a></td><td><a href="${runnumber}_sp_waitexec.png">${runnumber}_sp_waitexec.png</a></td></tr>
<tr><td>End-to-end times for aw_transaction</td><td><a href="${runnumber}_aw_waitexec.svg">${runnumber}_aw_waitexec.svg</a></td><td><a href="${runnumber}_aw_waitexec.png">${runnumber}_aw_waitexec.png</a></td></tr>
<tr><td>End-to-end times for aw_index_query</td><td><a href="${runnumber}_ai_waitexec.svg">${runnumber}_ai_waitexec.svg</a></td><td><a href="${runnumber}_ai_waitexec.png">${runnumber}_ai_waitexec.png</a></td></tr>
<tr><td>End-to-end times for complex_query</td><td><a href="${runnumber}_cq_waitexec.svg">${runnumber}_cq_waitexec.svg</a></td><td><a href="${runnumber}_cq_waitexec.png">${runnumber}_cq_waitexec.png</a></td></tr>
<tr><td>Output (stdout and stderr) from run</td><td><a href="$runnumber.txt">$runnumber.txt</a></td><td> </td></tr>
</table>
<H3>Notes:</H3>
<ul>
<li>Awr reports can fail if instance changes have been happening</li>
<li>Ping rates do not include session get; oci is OCIPing over the normal connection, rwl/dba are using select 1 from dual over respectively the normal and the dba connection</li>
<li>Graphs as svg are clickable, but cannot be embedded in e.g. confluence</li>
<li>Graphs marked with * are directly included below</li>
<li>Buffer cache is shown with lines, shared pool with lines and points</li>
<li>Dark red markings on x-axes indicate periods for awr snapshot gathering</li>
<li>Scroll down to see graphs alligned on runperiod</li>
<li>Input for gnuplot at $resultsdir$subdir$runnumber </li>
<li>Generated files at $awrdirectory$subdir$runnumber </li>
<li>In the session count graphs, there are client and database side figures:
    <ul>
    <li> Client side total/t is the total open count in both pools (left y-axis)
    <li> Client side open/o and active/a are open and active counts in the normal pool (left y-axis)</li>
    <li> Horizontal lines show the min/max range in the normal pool (left y-axis)</li>
    <li> Database side database/d is sum for all instances (left y-axis)</li> 
    <li> Database side 1/2/../8 is per instance and excluded with --ses-simplified (right y-axis)</li>
    <li> The single letter names (d,t,a,o) are used when --ses-simplified is not given to oltpplot</li>
    </ul>
END
tty -s && echo '<li>Stdout and stderr may not be available</li>' >> $awrdirectory$subdir$runnumber/index.html
echo '</ul>' >> $awrdirectory$subdir$runnumber/index.html

# We no longer do these as they weren't readable anyway
# <tr><td>Histograms of execution times</td><td><a href="${runnumber}_hist.svg">${runnumber}_hist.svg</a></td><td><a href="${runnumber}_hist.png">${runnumber}_hist.png</a></td></tr>
# <li>Histograms are hard to read - use the fractiles</li>

# Show overall error counts if any
rwloadsim -q -i runno:=$runnumber oerhtml.rwl >> $awrdirectory$subdir$runnumber/index.html
if test $oercount -gt 0 
then
  echo '<H3>Errors grouped by second</H3>' >> $awrdirectory$subdir$runnumber/index.html
  cat $resultsdir$subdir$runnumber/oertable.html >> $awrdirectory$subdir$runnumber/index.html
else
  echo '<H3>No errors in run</H3>' >> $awrdirectory$subdir$runnumber/index.html
fi

if test -f $resultsdir$subdir$runnumber/extraout.txt
then
  echo '<H3>Extra information for run:</H3>' >> $awrdirectory$subdir$runnumber/index.html
  cat $resultsdir$subdir$runnumber/extraout.txt | while read x
  do
    echo "$x" '<br>'
  done >> $awrdirectory$subdir$runnumber/index.html
fi

if test -f $resultsdir$subdir$runnumber/parmatstart.txt
then
  echo '<H3>Parameters at start of run:</H3>' >> $awrdirectory$subdir$runnumber/index.html
  cat $resultsdir$subdir$runnumber/parmatstart.txt | while read x
  do
    echo "$x" '<br>'
  done >> $awrdirectory$subdir$runnumber/index.html
else
  echo '<H3>Parameters at <u>end</u> of run:</H3>' >> $awrdirectory$subdir$runnumber/index.html
  rwloadsim -q -i proccount:=$proccount -i show_changed_values:=1 parameters.rwl | while read x
  do
    echo "$x" '<br>'
  done >> $awrdirectory$subdir$runnumber/index.html
fi
echo "proccount=$proccount" >> $awrdirectory$subdir$runnumber/index.html

if test $cstormwidth -gt 0
then
  cat $resultsdir$subdir$runnumber/cstorm.html >> $awrdirectory$subdir$runnumber/index.html
  for plotorder in beg end
  do
    cat > $resultsdir$subdir${runnumber}/cstorm$plotorder.plot <<END
    set title "$runnumberintitle extra connections $titletext"
    set yrange [0:*]
    set key horizontal bottom left outside
    set xlabel "logon counts"
    set ylabel "time (s)"
    set terminal svg mouse standalone size $cstormwidth,480 
    set output '$awrdirectory$subdir$runnumber/${runnumber}_cstorm$plotorder.svg'
    plot '$resultsdir$subdir$runnumber/cstorm$plotorder.csv' using 1:3 with points ps 0.5 lc rgb 'green' title 'initiated' \\
    , '$resultsdir$subdir$runnumber/cstorm$plotorder.csv' using 1:4 with points ps 0.5 lc rgb 'dark-green' title 'logged on' \\
END
    if test ! -z "$cstormtit1"
    then
      echo ", '$resultsdir$subdir$runnumber/cstorm$plotorder.csv' using 1:5 with points ps 0.5 lc rgb 'red' title '$cstormtit1' \\" >> $resultsdir$subdir${runnumber}/cstorm$plotorder.plot
    fi
    if test ! -z "$cstormtit2"
    then
      echo ", '$resultsdir$subdir$runnumber/cstorm$plotorder.csv' using 1:6 with points ps 0.5 lc rgb 'blue' title '$cstormtit2' \\" >> $resultsdir$subdir${runnumber}/cstorm$plotorder.plot
    fi
    if test ! -z "$cstormtit3"
    then
      echo ", '$resultsdir$subdir$runnumber/cstorm$plotorder.csv' using 1:7 with points ps 0.5 lc rgb 'cyan' title '$cstormtit3' \\" >> $resultsdir$subdir${runnumber}/cstorm$plotorder.plot
    fi
    if test $cstormabove3 = yes
    then
      echo ", '$resultsdir$subdir$runnumber/cstorm$plotorder.csv' using 1:8 with points ps 0.5 lc rgb 'orange' title 'other error' \\" >> $resultsdir$subdir${runnumber}/cstorm$plotorder.plot
    fi
    cat >> $resultsdir$subdir${runnumber}/cstorm$plotorder.plot <<END

    
    set terminal png size $cstormwidth,480
    set output '$awrdirectory$subdir$runnumber/${runnumber}_cstorm$plotorder.png'
    replot
END
    gnuplot $resultsdir$subdir${runnumber}/cstorm$plotorder.plot
  done
fi

cat <<END >> $awrdirectory$subdir$runnumber/index.html
<H2>Plots for $titletext at $rundate</H2>
<embed src="${runnumber}.svg"><br>
END

if test $oercount -gt 0 -a -f $awrdirectory$subdir$runnumber/${runnumber}_oerpivot.png
then
  echo '<embed src="'${runnumber}_oerpivot.svg'"><br>' >> $awrdirectory$subdir$runnumber/index.html
fi

cat <<END >> $awrdirectory$subdir$runnumber/index.html
$osstatembed <embed src="${runnumber}_instdist.svg"><br>
<embed src="${runnumber}_ping.svg"><br>
END

if test $ashcsvcount -gt 0 
then
  echo '<embed src="'$ashimg'"><br>' >> $awrdirectory$subdir$runnumber/index.html
fi

